<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>孤独狂饮</title>
  <subtitle>只要有百分之一的梦想，就要付出百分之百的努力。努力不一定成功，但是不努力就一定不会成功！</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://gdky005.com/"/>
  <updated>2017-05-03T02:35:30.000Z</updated>
  <id>http://gdky005.com/</id>
  
  <author>
    <name>gdky005</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>如何选择 compileSdkVersion, minSdkVersion 和 targetSdkVersion</title>
    <link href="http://gdky005.com/2017/05/03/%E5%A6%82%E4%BD%95%E9%80%89%E6%8B%A9-compileSdkVersion-minSdkVersion-%E5%92%8C-targetSdkVersion/"/>
    <id>http://gdky005.com/2017/05/03/如何选择-compileSdkVersion-minSdkVersion-和-targetSdkVersion/</id>
    <published>2017-05-03T02:34:33.000Z</published>
    <updated>2017-05-03T02:35:30.000Z</updated>
    
    <content type="html">&lt;p&gt;&lt;img src=&quot;https://o0dsxp5zq.qnssl.com/wp-content/uploads/2016/01/androidversion.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;英文原文：&lt;a href=&quot;https://medium.com/google-developers/picking-your-compilesdkversion-minsdkversion-targetsdkversion-a098a0341ebd#.tz5zzucma&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Picking your compileSdkVersion, minSdkVersion, and targetSdkVersion&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;当你发布一个应用之后，(取决于具体的发布时间)可能没过几个月 Android 系统就发布了一个新版本。这对你的应用意味着什么，所有东西都不能用了？&lt;/p&gt;
&lt;p&gt;别担心，&lt;strong&gt;向前兼容&lt;/strong&gt;是 Android 非常关注的事情。用户在升级到新版 Android 的时候，用以前版本的 SDK 构建的现有应用应该不会出问题。这就是 &lt;strong&gt;compileSdkVersion&lt;/strong&gt;, &lt;strong&gt;minSdkVersion&lt;/strong&gt; 和 &lt;strong&gt;targetSdkVersion&lt;/strong&gt; 的作用：他们分别控制可以使用哪些 API ，要求的 API 级别是什么，以及应用的兼容模式。&lt;/p&gt;
&lt;h3 id=&quot;compileSdkVersion&quot;&gt;&lt;a href=&quot;#compileSdkVersion&quot; class=&quot;headerlink&quot; title=&quot;compileSdkVersion&quot;&gt;&lt;/a&gt;compileSdkVersion&lt;/h3&gt;&lt;p&gt;compileSdkVersion 告诉 Gradle 用哪个 Android SDK 版本编译你的应用。使用任何新添加的 API 就需要使用对应 Level 的 Android SDK。&lt;/p&gt;
&lt;p&gt;需要强调的是&lt;strong&gt;修改 compileSdkVersion 不会改变运行时的行为&lt;/strong&gt;。当你修改了 compileSdkVersion 的时候，可能会出现新的编译警告、编译错误，但新的 compileSdkVersion 不会被包含到 APK 中：它纯粹只是在编译的时候使用。（你真的应该修复这些警告，他们的出现一定是有原因的）&lt;/p&gt;
&lt;p&gt;因此我们强烈推荐&lt;strong&gt;总是使用最新的 SDK 进行编译&lt;/strong&gt;。在现有代码上使用新的编译检查可以获得很多好处，避免新弃用的 API ，并且为使用新的 API 做好准备。&lt;/p&gt;
&lt;p&gt;注意，如果使用 &lt;a href=&quot;http://developer.android.com/tools/support-library/index.html?utm_campaign=adp_series_sdkversion_010616&amp;amp;utm_source=medium&amp;amp;utm_medium=blog&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Support Library&lt;/a&gt;，那么使用最新发布的 Support Library 就需要使用最新的 SDK 编译。例如，要使用 23.1.1 版本的 Support Library ，compileSdkVersion 就必需至少是 23 （大版本号要一致！）。通常，新版的 Support Library 随着新的系统版本而发布，它为系统新增加的 API 和新特性提供兼容性支持。&lt;/p&gt;
&lt;h3 id=&quot;minSdkVersion&quot;&gt;&lt;a href=&quot;#minSdkVersion&quot; class=&quot;headerlink&quot; title=&quot;minSdkVersion&quot;&gt;&lt;/a&gt;minSdkVersion&lt;/h3&gt;&lt;p&gt;如果 compileSdkVersion 设置为可用的最新 API，那么 &lt;strong&gt;minSdkVersion 则是应用可以运行的最低要求&lt;/strong&gt;。minSdkVersion 是 Google Play 商店用来判断用户设备是否可以安装某个应用的标志之一。&lt;/p&gt;
&lt;p&gt;在开发时 minSdkVersion 也起到一个重要角色：&lt;a href=&quot;http://developer.android.com/tools/debugging/improving-w-lint.html?utm_campaign=adp_series_sdkversion_010616&amp;amp;utm_source=medium&amp;amp;utm_medium=blog&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;lint&lt;/a&gt; 默认会在项目中运行，它在你使用了高于 minSdkVersion  的 API 时会警告你，帮你避免调用不存在的 API 的运行时问题。如果只在较高版本的系统上才使用某些 API，通常使用&lt;a href=&quot;http://developer.android.com/training/basics/supporting-devices/platforms.html?utm_campaign=adp_series_sdkversion_010616&amp;amp;utm_source=medium&amp;amp;utm_medium=blog#version-codes&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;运行时检查系统版本&lt;/a&gt;的方式解决。&lt;/p&gt;
&lt;p&gt;请记住，你所使用的库，如 &lt;a href=&quot;http://developer.android.com/tools/support-library/features.html?utm_campaign=adp_series_sdkversion_010616&amp;amp;utm_source=medium&amp;amp;utm_medium=blog&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Support Library&lt;/a&gt; 或 &lt;a href=&quot;https://developers.google.com/android/guides/overview?utm_campaign=adp_series_sdkversion_010616&amp;amp;utm_source=medium&amp;amp;utm_medium=blog&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Google Play services&lt;/a&gt;，可能有他们自己的 minSdkVersion 。你的应用设置的 minSdkVersion 必需大于等于这些库的 minSdkVersion 。例如有三个库，它们的 minSdkVersion 分别是 4, 7 和 9 ，那么你的 minSdkVersion  必需至少是 9 才能使用它们。在少数情况下，你仍然想用一个比你应用的 minSdkVersion 还高的库（处理所有的边缘情况，确保它只在较新的平台上使用），你可以使用 &lt;a href=&quot;http://tools.android.com/tech-docs/new-build-system/user-guide/manifest-merger?utm_campaign=adp_series_sdkversion_010616&amp;amp;utm_source=medium&amp;amp;utm_medium=blog#TOC-tools:overrideLibrary-marker&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;tools:overrideLibrary&lt;/a&gt; 标记，但请做彻底的测试！&lt;/p&gt;
&lt;p&gt;当你决定使用什么 minSdkVersion 时候，你应该&lt;strong&gt;参考当前的 &lt;a href=&quot;http://developer.android.com/about/dashboards/index.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Android 分布统计&lt;/a&gt;&lt;/strong&gt;，它显示了最近 7 天所有访问 Google Play 的设备信息。他们就是你把应用发布到 Google Play 时的潜在用户。最终这是一个商业决策问题，取决于为了支持额外 3% 的设备，确保最佳体验而付出的开发和测试成本是否值得。&lt;/p&gt;
&lt;p&gt;当然，如果某个新的 API 是你整个应用的关键，那么确定 minSdkVersion 的值就比较容易了。不过要记得 14 亿设备中的 0.7％ 也是个不小的数字。&lt;/p&gt;
&lt;h3 id=&quot;targetSdkVersion&quot;&gt;&lt;a href=&quot;#targetSdkVersion&quot; class=&quot;headerlink&quot; title=&quot;targetSdkVersion&quot;&gt;&lt;/a&gt;targetSdkVersion&lt;/h3&gt;&lt;p&gt;三个版本号中最有趣的就是 targetSdkVersion 了。 &lt;strong&gt;targetSdkVersion 是 Android 提供向前兼容的主要依据&lt;/strong&gt;，在应用的 targetSdkVersion 没有更新之前系统不会应用最新的行为变化。这允许你在适应新的行为变化之前就可以使用新的 API （因为你已经更新了 compileSdkVersion 不是吗？）。&lt;/p&gt;
&lt;p&gt;targetSdkVersion 所暗示的许多行为变化都记录在 &lt;a href=&quot;http://developer.android.com/reference/android/os/Build.VERSION_CODES.html?utm_campaign=adp_series_sdkversion_010616&amp;amp;utm_source=medium&amp;amp;utm_medium=blog&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;VERSION_CODES&lt;/a&gt; 文档中了，但是所有恐怖的细节也都列在每次发布的平台亮点中了，在这个 &lt;a href=&quot;http://developer.android.com/guide/topics/manifest/uses-sdk-element.html?utm_campaign=adp_series_sdkversion_010616&amp;amp;utm_source=medium&amp;amp;utm_medium=blog#ApiLevels&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;API Level&lt;/a&gt; 表中可以方便地找到相应的链接。&lt;/p&gt;
&lt;p&gt;例如，&lt;a href=&quot;http://developer.android.com/about/versions/marshmallow/android-6.0-changes.html?utm_campaign=adp_series_sdkversion_010616&amp;amp;utm_source=medium&amp;amp;utm_medium=blog&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Android 6.0 变化文档&lt;/a&gt;中谈了 target 为 API 23 时会如何把你的应用转换到&lt;a href=&quot;http://android-developers.blogspot.com/2015/08/building-better-apps-with-runtime.html?utm_campaign=adp_series_sdkversion_010616&amp;amp;utm_source=medium&amp;amp;utm_medium=blog&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;运行时权限模型&lt;/a&gt;上，&lt;a href=&quot;http://developer.android.com/about/versions/android-4.4.html?utm_campaign=adp_series_sdkversion_010616&amp;amp;utm_source=medium&amp;amp;utm_medium=blog#Behaviors&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Android 4.4 行为&lt;/a&gt;变化阐述了 target 为 API 19 及以上时使用 &lt;a href=&quot;http://developer.android.com/reference/android/app/AlarmManager.html?utm_campaign=adp_series_sdkversion_010616&amp;amp;utm_source=medium&amp;amp;utm_medium=blog#set%28int,%20long,%20android.app.PendingIntent%29&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;set()&lt;/a&gt; 和 &lt;a href=&quot;http://developer.android.com/reference/android/app/AlarmManager.html?utm_campaign=adp_series_sdkversion_010616&amp;amp;utm_source=medium&amp;amp;utm_medium=blog#setRepeating%28int,%20long,%20long,%20android.app.PendingIntent%29&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;setRepeating()&lt;/a&gt; 设置 alarm 会有怎样的行为变化。&lt;/p&gt;
&lt;p&gt;由于某些行为的变化对用户是非常明显的（&lt;a href=&quot;http://android-developers.blogspot.com/2012/01/say-goodbye-to-menu-button.html?utm_campaign=adp_series_sdkversion_010616&amp;amp;utm_source=medium&amp;amp;utm_medium=blog&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;弃用的 menu 按钮&lt;/a&gt;，运行时权限等），所以&lt;strong&gt;将 target 更新为最新的 SDK 是所有应用都应该优先处理的事情&lt;/strong&gt;。但这不意味着你一定要使用所有新引入的功能，也不意味着你可以不做任何测试就盲目地更新 targetSdkVersion ，&lt;a href=&quot;http://android-developers.blogspot.com/2012/01/say-goodbye-to-menu-button.html?utm_campaign=adp_series_sdkversion_010616&amp;amp;utm_source=medium&amp;amp;utm_medium=blog&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;请一定在更新 targetSdkVersion 之前做测试！&lt;/a&gt;你的用户会感谢你的。&lt;/p&gt;
&lt;h3 id=&quot;Gradle-和-SDK-版本&quot;&gt;&lt;a href=&quot;#Gradle-和-SDK-版本&quot; class=&quot;headerlink&quot; title=&quot;Gradle 和 SDK 版本&quot;&gt;&lt;/a&gt;Gradle 和 SDK 版本&lt;/h3&gt;&lt;p&gt;所以设置正确的 compileSdkVersion, minSdkVersion 和 targetSdkVersion 很重要。如你所想， &lt;a href=&quot;http://developer.android.com/tools/building/plugin-for-gradle.html?utm_campaign=adp_series_sdkversion_010616&amp;amp;utm_source=medium&amp;amp;utm_medium=blog&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Gradle&lt;/a&gt; 和 &lt;a href=&quot;http://developer.android.com/tools/studio/index.html?utm_campaign=adp_series_sdkversion_010616&amp;amp;utm_source=medium&amp;amp;utm_medium=blog&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Android Studio&lt;/a&gt; 都在构建系统中集成了它们。在你的模块的 build.gradle 文件中（也可以在 Android Studio 的项目结构选项中）设置：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;android {
  compileSdkVersion 23
  buildToolsVersion &amp;quot;23.0.1&amp;quot;

  defaultConfig {
    applicationId &amp;quot;com.example.checkyourtargetsdk&amp;quot;
    minSdkVersion 7
    targetSdkVersion 23
    versionCode 1
    versionName “1.0”
  }
}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;编译时用到的 compileSdkVersion 是和构建工具版本一起设置的 Android 设置之一。其他两个稍有不同，他们在构建变体(&lt;a href=&quot;http://developer.android.com/tools/building/plugin-for-gradle.html?utm_campaign=adp_series_sdkversion_010616&amp;amp;utm_source=medium&amp;amp;utm_medium=blog#buildVariants&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;build variant&lt;/a&gt;)的那里声明。defaultConfig 是所有构建变体的基础，也是设置这些默认值的地方。你可以想象在一个更复杂的系统中，应用的某些版本可能会有不同的 minSdkVersion 。&lt;/p&gt;
&lt;p&gt;minSdkVersion 和 targetSdkVersion 与 compileSdkVersion 的另一个不同之处是它们会被包含进最终的 APK 文件中，如果你查看生成的 AndroidManifest.xml 文件，你会看到类似下面这样的标签：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;uses-sdk android:targetSdkVersion=&amp;quot;23&amp;quot; android:minSdkVersion=&amp;quot;7&amp;quot; /&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;如果你在 manifest 文件中手工设置，你会发现 Gradle 在构建时会忽略它们（尽管其它构建系统可能会明确依赖它们）。&lt;/p&gt;
&lt;h3 id=&quot;综合来看&quot;&gt;&lt;a href=&quot;#综合来看&quot; class=&quot;headerlink&quot; title=&quot;综合来看&quot;&gt;&lt;/a&gt;综合来看&lt;/h3&gt;&lt;p&gt;如果你按照上面示例那样配置，你会发现这三个值的关系是：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;minSdkVersion &amp;lt;= targetSdkVersion &amp;lt;= compileSdkVersion
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;这种直觉是合理的，如果 compileSdkVersion 是你的最大值，minSdkVersion 是最小值，那么最大值必需至少和最小值一样大且 target 必需在二者之间。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;理想上&lt;/strong&gt;，在稳定状态下三者的关系应该更像这样：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;minSdkVersion (lowest possible) &amp;lt;= 
            targetSdkVersion == compileSdkVersion (latest SDK)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;用较低的 minSdkVersion 来覆盖最大的人群，用最新的 SDK 设置 target 和 compile 来获得最好的外观和行为。#BuildBetterApps&lt;/p&gt;
&lt;h3 id=&quot;备注&quot;&gt;&lt;a href=&quot;#备注&quot; class=&quot;headerlink&quot; title=&quot;备注&quot;&gt;&lt;/a&gt;备注&lt;/h3&gt;&lt;p&gt;译者注： Android Development Patterns 系列视频见 YouTube 或 优酷 。&lt;br&gt;来自： &lt;a href=&quot;http://chinagdg.org/2016/01/picking-your-compilesdkversion-minsdkversion-targetsdkversion/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://chinagdg.org/2016/01/picking-your-compilesdkversion-minsdkversion-targetsdkversion/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://o0dsxp5zq.qnssl.com/wp-content/uploads/2016/01/androiddeveloperpatterns-1024x317.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://o0dsxp5zq.qnssl.com/wp-content/uploads/2016/01/androidversion.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;英文原文：&lt;a href=&quot;https://medium.com/goog
    
    </summary>
    
      <category term="android" scheme="http://gdky005.com/categories/android/"/>
    
    
      <category term="android" scheme="http://gdky005.com/tags/android/"/>
    
  </entry>
  
  <entry>
    <title>怎么关闭小米锁屏音乐？最终解决方案以及原理分析</title>
    <link href="http://gdky005.com/2017/03/31/%E6%80%8E%E4%B9%88%E5%85%B3%E9%97%AD%E5%B0%8F%E7%B1%B3%E9%94%81%E5%B1%8F%E9%9F%B3%E4%B9%90%EF%BC%9F%E6%9C%80%E7%BB%88%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88%E4%BB%A5%E5%8F%8A%E5%8E%9F%E7%90%86%E5%88%86%E6%9E%90/"/>
    <id>http://gdky005.com/2017/03/31/怎么关闭小米锁屏音乐？最终解决方案以及原理分析/</id>
    <published>2017-03-31T03:29:48.000Z</published>
    <updated>2017-03-31T03:30:41.000Z</updated>
    
    <content type="html">&lt;h3 id=&quot;相关图片我就不贴了，参考下面遇到的这些问题：&quot;&gt;&lt;a href=&quot;#相关图片我就不贴了，参考下面遇到的这些问题：&quot; class=&quot;headerlink&quot; title=&quot;相关图片我就不贴了，参考下面遇到的这些问题：&quot;&gt;&lt;/a&gt;相关图片我就不贴了，参考下面遇到的这些问题：&lt;/h3&gt;&lt;p&gt;&lt;a href=&quot;http://www.miui.com/thread-4005188-2-1.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.miui.com/thread-4005188-2-1.html&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://www.miui.com/forum.php?mod=viewthread&amp;amp;tid=2617209&amp;amp;mobile=1&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.miui.com/forum.php?mod=viewthread&amp;amp;tid=2617209&amp;amp;mobile=1&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://www.miui.com/forum.php?mod=viewthread&amp;amp;tid=3960406&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.miui.com/forum.php?mod=viewthread&amp;amp;tid=3960406&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://www.miui.com/thread-2592275-1-1.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.miui.com/thread-2592275-1-1.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;『启动最近任务，把音乐类的APP给关掉。』&lt;/p&gt;
&lt;h3 id=&quot;我这里有一个实际的场景，大家可以参考下：&quot;&gt;&lt;a href=&quot;#我这里有一个实际的场景，大家可以参考下：&quot; class=&quot;headerlink&quot; title=&quot;我这里有一个实际的场景，大家可以参考下：&quot;&gt;&lt;/a&gt;我这里有一个实际的场景，大家可以参考下：&lt;/h3&gt;&lt;p&gt;我的小米53G 内存版本手机 之前启动的时候手机可用内存基本都1G 左右，清理完内存后是1.3G。但是最近清理后总发现是1G 左右，内存平时都是800-900MB，也没太在意。&lt;/p&gt;
&lt;p&gt;最近发现每次锁屏后总是显示小米音乐锁屏界面，可难看了，用着很是别扭，之前还有 小米锁屏画报展示的，但是这几天总是显示这个音乐锁屏界面。感觉很不爽，越是网上各种搜索，结果大家还都是没什么好版本，所以也提供了一些，但是针对某些场景，不适用于我此刻的情况。&lt;br&gt;先罗列下基本的解决办法吧：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;如果你当前在使用音乐软件听歌，这个肯定是去不掉的，因为音乐软件针对小米系统做了专门的功能，小米应用市场上线有这个要求哦。&lt;/li&gt;
&lt;li&gt;重启手机后 就没有了。&lt;/li&gt;
&lt;li&gt;刚在听歌，但是已经不听歌了，把这个 app 从 最近的任务 管理中杀掉即可。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;基本就这几种情况。但是我目前和大多数人一样，遇到了一种极其奇葩的问题，那就是我明明没有听歌，最近任务里面也没有音乐软件，清理内存后 还是 显示音乐锁屏界面啊。 即使我重新启动机器也不行，这就奇了怪了。之前锁屏的时候有 小米锁屏画报，还能展示各种图片，看着赏心悦目，但是现在那个东东都不出来了，什么情况呢？&lt;/p&gt;
&lt;h3 id=&quot;下面我用-一个-程序员-的角度去分析这种情况。&quot;&gt;&lt;a href=&quot;#下面我用-一个-程序员-的角度去分析这种情况。&quot; class=&quot;headerlink&quot; title=&quot;下面我用 一个 程序员 的角度去分析这种情况。&quot;&gt;&lt;/a&gt;下面我用 一个 程序员 的角度去分析这种情况。&lt;/h3&gt;&lt;p&gt;首先呢，我记得我们之前开发 音乐类 app 的时候，上线小米应用商店，不给通过，说必须加小米锁屏。然后我们就加上了，默认情况下，当用户锁屏后再启动会有自己的锁屏界面，但是有时候小米为了一些性能方面的考虑不让显示，需要直接显示他们的小米锁屏音乐界面。因此基本上市场上的音乐类软件都有小米锁屏界面的 sdk 哦。因为每个软件都有锁屏的 sdk, 所以当听音乐的时候，就会触发这个。你锁屏后再次解锁，就能看到这个了，这是大前提。&lt;/p&gt;
&lt;h3 id=&quot;下面开始重点来了。&quot;&gt;&lt;a href=&quot;#下面开始重点来了。&quot; class=&quot;headerlink&quot; title=&quot;下面开始重点来了。&quot;&gt;&lt;/a&gt;下面开始重点来了。&lt;/h3&gt;&lt;p&gt;现在没有运行音乐软件，但是还是出现了这个，这是怎么回事呢？ 去最近的任务管理也看到不？这个锁屏 SDK 的界面为什么出来了？&lt;br&gt;我在搜索相关资料的时候，一个人的回答提醒了我：『启动最近任务，把音乐类的APP给关掉。』&lt;/p&gt;
&lt;p&gt;我的任务管理中没有啊，突然意识到可能是之前在任务管理中把某些音乐类软件的进程锁定。才造成这种情况，那么我就是试试把手机上所以的音乐类软件打开，其实也就那么几个，网易音乐，酷我，企鹅 FM。然后惊奇的发现，果然如我所料，企鹅 FM 在任务管理中 的小图标上有一个锁。这次我把这个小锁上滑去掉后，再次清理内存就发现，内存一下子就剩 1.3GB 了。 锁屏，解锁，终于出现了小米锁屏画报，这是太好了，这个问题就这样解决了。关键问题还是在这里：音乐类 app 被锁定后，清理内存的时候，会把这个任务干掉，但是由于被锁定了，其实还在内存中。只是在图标上看不到而已，如果手机被 root了，可以用其他的软件清理内存，就可以了。这里还需要注意一点，虽然手机被重启了，但是由于 app 是锁定的状态，所以还是会被启动，app 一启动，就能看得见那个 小米锁屏界面。但是你在任务管理中却看不见，这也是 小米系统的一个 bug 吧。目前这样解决即可。&lt;/p&gt;
&lt;p&gt;如果还有疑问，或者不懂的地方，加 weixin: gdky005, 备注锁屏即可。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;相关图片我就不贴了，参考下面遇到的这些问题：&quot;&gt;&lt;a href=&quot;#相关图片我就不贴了，参考下面遇到的这些问题：&quot; class=&quot;headerlink&quot; title=&quot;相关图片我就不贴了，参考下面遇到的这些问题：&quot;&gt;&lt;/a&gt;相关图片我就不贴了，参考下面遇到的这些问
    
    </summary>
    
    
      <category term="原理" scheme="http://gdky005.com/tags/%E5%8E%9F%E7%90%86/"/>
    
  </entry>
  
  <entry>
    <title>升级android 7.1一些经历</title>
    <link href="http://gdky005.com/2017/03/02/%E5%8D%87%E7%BA%A7android-7-1%E4%B8%80%E4%BA%9B%E7%BB%8F%E5%8E%86/"/>
    <id>http://gdky005.com/2017/03/02/升级android-7-1一些经历/</id>
    <published>2017-03-02T02:56:48.000Z</published>
    <updated>2017-03-02T03:01:02.000Z</updated>
    
    <content type="html">&lt;p&gt;我一直用的测试机是华为 nexus P6, 7.0出来的时候，刷了一个 7.0 玩，感觉还不错，有些你在 7.0之下的版本绝不会出现的问题，出现了好多。&lt;/p&gt;
&lt;p&gt;当7.1 出现的时候，本来不想升级，但是 android 组的 leader 让我把这个 P6 升级为 7.1。为了让测试的性能组测试 vovi 新机器适配。想着刷就刷呗，应该没啥问题。&lt;/p&gt;
&lt;p&gt;可悲的事情就来了，因为我的这个 P6升级到 7.0后就 root 了，刷了 twrp 启动方式。结果直接挂代理后，升级 7.1 后就悲剧了，机子死活开不了机。&lt;/p&gt;
&lt;p&gt;通过 &lt;a href=&quot;http://www.pixcn.cn/thread-23317-1-1.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.pixcn.cn/thread-23317-1-1.html&lt;/a&gt; ，找到了一些解决方案。因为是我的手机 刷了 rec 启动，所以直接用系统自带的更新包就不行。在官网 &lt;a href=&quot;https://developers.google.com/android/images&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://developers.google.com/android/images&lt;/a&gt; 下载了 Factory Images 镜像，只能用线刷。&lt;/p&gt;
&lt;p&gt;把 这个镜像通过 rec 连接电脑，用命令行放入 手机SD 卡中，直接刷总是失败，必须用线刷啊，线刷啊，线刷啊。&lt;/p&gt;
&lt;p&gt;在折腾的很无奈的时候，灵光一闪，进入 rec 之前，尝试用 adb 连接手机，可是就是 连接不上。 最后直接尝试 fastXXX ,没想到 adb shell 不行，但是 电脑上解压 zip 后， 里面的 fast 命令可直接使用。很顺利的就完成了刷机，进入了 7.1 系统。&lt;/p&gt;
&lt;p&gt;在7.0 的时候就一直很郁闷，wifi 连接成功后，在顶部的 wifi 状态标识上面总是有一个 小感叹号。一直没解决，没想到 7.1 直接变成了 小 『x』, 在群里讨论后，一个哥们说可以去掉，我尝试百度了下，用一下命令真就去掉了。 追查原因，说是 google 会去检测 wifi 是否安全，来显示那个 感叹号和小『x』。&lt;/p&gt;
&lt;p&gt;adb输入命令：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;adb shell settings put global captive_portal_detection_enabled 0
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;完成后开启飞行模式即可&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;我一直用的测试机是华为 nexus P6, 7.0出来的时候，刷了一个 7.0 玩，感觉还不错，有些你在 7.0之下的版本绝不会出现的问题，出现了好多。&lt;/p&gt;
&lt;p&gt;当7.1 出现的时候，本来不想升级，但是 android 组的 leader 让我把这个 P6 升级为 7
    
    </summary>
    
      <category term="android" scheme="http://gdky005.com/categories/android/"/>
    
    
      <category term="android" scheme="http://gdky005.com/tags/android/"/>
    
  </entry>
  
  <entry>
    <title>卓客Team团队组建成功</title>
    <link href="http://gdky005.com/2016/11/01/%E5%8D%93%E5%AE%A2Team%E5%9B%A2%E9%98%9F%E7%BB%84%E5%BB%BA%E6%88%90%E5%8A%9F/"/>
    <id>http://gdky005.com/2016/11/01/卓客Team团队组建成功/</id>
    <published>2016-11-01T11:36:52.000Z</published>
    <updated>2016-11-01T11:43:49.000Z</updated>
    
    <content type="html">&lt;h3 id=&quot;卓客Team团队组建成功&quot;&gt;&lt;a href=&quot;#卓客Team团队组建成功&quot; class=&quot;headerlink&quot; title=&quot;卓客Team团队组建成功&quot;&gt;&lt;/a&gt;卓客Team团队组建成功&lt;/h3&gt;&lt;p&gt;卓客Team团队 目前已经组建成功，接下来将完成一些很有意义的事情，请持续关注。&lt;/p&gt;
&lt;h3 id=&quot;卓客Team-群规&quot;&gt;&lt;a href=&quot;#卓客Team-群规&quot; class=&quot;headerlink&quot; title=&quot;卓客Team 群规&quot;&gt;&lt;/a&gt;卓客Team 群规&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;群成员固定为20人，如有突出贡献者，可以破格入群。&lt;/li&gt;
&lt;li&gt;这是一个活跃度很高的Team，每个人都应该展现自己的能力，提升在团队中的影响力。&lt;/li&gt;
&lt;li&gt;请大家都参与课题的设计和讨论，提升个人基本知识技能，并增加团队活跃度。&lt;/li&gt;
&lt;li&gt;希望大家能把好想法和想要研究的东西发到群里面，会被列入到要处理的事项里面。&lt;/li&gt;
&lt;li&gt;做一些很有价值的事情，研究比较感兴趣的技术，撰写一些有技术内涵的文章。&lt;br&gt;在团队中的人，都应该为团队做出适当的贡献，有能力的展示才华，能力弱的可以在其他方面给团队做出贡献。&lt;/li&gt;
&lt;li&gt;对申请加入到群组的人，务必完成一篇课题文章，带组员审核通过后，方可进入。&lt;br&gt;如有新人进入，可能会踢出某些不活跃的成员，请见谅。&lt;/li&gt;
&lt;li&gt;对于活跃度不高的成员，采取适者生存的法则。&lt;/li&gt;
&lt;li&gt;对于存在争议的问题，采取大于等于三分之二以上的票数为通过条件。&lt;/li&gt;
&lt;li&gt;对团队中成员发出的文章或者团队的规定等有疑问或者感觉不合适的地方，可以直接提出修改，并在评论中提出个人观点。&lt;/li&gt;
&lt;li&gt;对于不合理的地方，可以在相关平台上发表自己的意见。&lt;/li&gt;
&lt;/ol&gt;
</content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;卓客Team团队组建成功&quot;&gt;&lt;a href=&quot;#卓客Team团队组建成功&quot; class=&quot;headerlink&quot; title=&quot;卓客Team团队组建成功&quot;&gt;&lt;/a&gt;卓客Team团队组建成功&lt;/h3&gt;&lt;p&gt;卓客Team团队 目前已经组建成功，接下来将完成一些很有意义
    
    </summary>
    
      <category term="ZhuoKeTeam" scheme="http://gdky005.com/categories/ZhuoKeTeam/"/>
    
    
      <category term="卓客Team" scheme="http://gdky005.com/tags/%E5%8D%93%E5%AE%A2Team/"/>
    
  </entry>
  
  <entry>
    <title>标准的Android git和HG的忽略文件是什么样的呢？</title>
    <link href="http://gdky005.com/2016/08/25/%E6%A0%87%E5%87%86%E7%9A%84Android-git%E5%92%8CHG%E7%9A%84%E5%BF%BD%E7%95%A5%E6%96%87%E4%BB%B6%E6%98%AF%E4%BB%80%E4%B9%88%E6%A0%B7%E7%9A%84%E5%91%A2%EF%BC%9F/"/>
    <id>http://gdky005.com/2016/08/25/标准的Android-git和HG的忽略文件是什么样的呢？/</id>
    <published>2016-08-25T03:00:40.000Z</published>
    <updated>2016-08-25T03:46:27.000Z</updated>
    
    <content type="html">&lt;p&gt;&lt;img src=&quot;http://7xlcno.com1.z0.glb.clouddn.com/gitgit_hg_small.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;什么是忽略文件？&quot;&gt;&lt;a href=&quot;#什么是忽略文件？&quot; class=&quot;headerlink&quot; title=&quot;什么是忽略文件？&quot;&gt;&lt;/a&gt;什么是忽略文件？&lt;/h3&gt;&lt;p&gt;当我们在使用 git 和 HG 管理项目文件的时候，会生成很多的文件，但是这些临时文件并不需要我们提交到我们的服务器去，因此就会使用到忽略文件。&lt;/p&gt;
&lt;h3 id=&quot;忽略文件的作用？&quot;&gt;&lt;a href=&quot;#忽略文件的作用？&quot; class=&quot;headerlink&quot; title=&quot;忽略文件的作用？&quot;&gt;&lt;/a&gt;忽略文件的作用？&lt;/h3&gt;&lt;p&gt;当我们用的不好的时候，就会在提交的时候，有很多凌乱的信息，导致我们提交错误或者冲突。最极端的情况就是把一些需要频繁改动的文件提交到服务器，会造成经常冲突，因此我们需要一份标准的忽略文件。&lt;/p&gt;
&lt;h3 id=&quot;通用的忽略文件&quot;&gt;&lt;a href=&quot;#通用的忽略文件&quot; class=&quot;headerlink&quot; title=&quot;通用的忽略文件&quot;&gt;&lt;/a&gt;通用的忽略文件&lt;/h3&gt;&lt;p&gt;以下提供两种忽略文件的模板，满足大部分需求。&lt;/p&gt;
&lt;h5 id=&quot;1-git-的忽略文件模板：&quot;&gt;&lt;a href=&quot;#1-git-的忽略文件模板：&quot; class=&quot;headerlink&quot; title=&quot;1. git 的忽略文件模板：&quot;&gt;&lt;/a&gt;1. git 的忽略文件模板：&lt;/h5&gt;&lt;p&gt;&lt;img src=&quot;http://7xlcno.com1.z0.glb.clouddn.com/gitgit.jpg&quot; alt=&quot;&quot;&gt;&lt;br&gt;请在项目的根目录下创建或者修改这个文件： .gitignore 即可。git相关管理工具会 自动识别该文件，帮我们自动忽略掉不需要的文件。如果我们有其他文件也不用提交的画，可以参考下面的样式添加进去即可：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;*~
.DS_Store

# Android Studio
*.iml
.idea
.gradle

build


# Created by .ignore support plugin (hsz.mobi)
syntax: glob

### Android template
# Built application files
*.apk
*.ap_

# Files for the ART/Dalvik VM
*.dex

# Java class files
*.class

# Generated files
bin/
gen/
out/

# Gradle files
.gradle/
build/

# Local configuration file (sdk path, etc)
local.properties

# Proguard folder generated by Eclipse
proguard/

# Log Files
*.log

# Android Studio Navigation editor temp files
.navigation/

# Android Studio captures folder
captures/

# Intellij
*.iml
.idea/workspace.xml

# Keystore files
*.jks
### Eclipse template

.metadata
tmp/
*.tmp
*.bak
*.swp
*~.nib
.settings/
.loadpath
.recommenders

# Eclipse Core
.project

# External tool builders
.externalToolBuilders/

# Locally stored &amp;quot;Eclipse launch configurations&amp;quot;
*.launch

# PyDev specific (Python IDE for Eclipse)
*.pydevproject

# CDT-specific (C/C++ Development Tooling)
.cproject

# JDT-specific (Eclipse Java Development Tools)
.classpath

# Java annotation processor (APT)
.factorypath

# PDT-specific (PHP Development Tools)
.buildpath

# sbteclipse plugin
.target

# Tern plugin
.tern-project

# TeXlipse plugin
.texlipse

# STS (Spring Tool Suite)
.springBeans

# Code Recommenders
.recommenders/

# Mobile Tools for Java (J2ME)
.mtj.tmp/

# Package Files #
*.jar
*.war
*.ear

# virtual machine crash logs, see http://www.java.com/en/download/help/error_hotspot.xml
hs_err_pid*
### Example user template template
### Example user template

# IntelliJ project files
.idea
out
gen
&lt;/code&gt;&lt;/pre&gt;&lt;h5 id=&quot;2-HG-Mercurial-的忽略文件模板：&quot;&gt;&lt;a href=&quot;#2-HG-Mercurial-的忽略文件模板：&quot; class=&quot;headerlink&quot; title=&quot;2. HG/Mercurial 的忽略文件模板：&quot;&gt;&lt;/a&gt;2. HG/Mercurial 的忽略文件模板：&lt;/h5&gt;&lt;p&gt;&lt;img src=&quot;http://7xlcno.com1.z0.glb.clouddn.com/gitmercurial.png&quot; alt=&quot;&quot;&gt;&lt;br&gt;HG (Mercurial) 的标准忽略文件。这是早期比较好的项目管理工具，但是随着git 的用户群体庞大，git越来越灵活，简单易用，因此 HG也就慢慢退出了我们的视线。最有名的 github 里面也大量使用到git。但是作为一种管理工具，在不同的环境场景下，也可能需要使用HG，尤其是公司的备份管理等，都十分的安全。使用方式很简单，在主项目的根目录下 创建或者修改： .hgignore 文件即可。 这个文件也可以直接放到mode 里面去。 这里提供忽略文件如下：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# Created by .ignore support plugin (hsz.mobi)
syntax: glob

### Android template
# Built application files
*.apk
*.ap_

# Files for the ART/Dalvik VM
*.dex

# Java class files
*.class

# Generated files
bin/
gen/
out/

# Gradle files
.gradle/
build/

# Local configuration file (sdk path, etc)
local.properties

# Proguard folder generated by Eclipse
proguard/

# Log Files
*.log

# Android Studio Navigation editor temp files
.navigation/

# Android Studio captures folder
captures/


# Keystore files
*.jks
### Eclipse template

.metadata
tmp/
*.tmp
*.bak
*.swp
*~.nib
.settings/
.loadpath
.recommenders

# Eclipse Core
.project

# External tool builders
.externalToolBuilders/

# Locally stored &amp;quot;Eclipse launch configurations&amp;quot;
*.launch

# PyDev specific (Python IDE for Eclipse)
*.pydevproject

# CDT-specific (C/C++ Development Tooling)
.cproject

# JDT-specific (Eclipse Java Development Tools)
.classpath

# Java annotation processor (APT)
.factorypath

# PDT-specific (PHP Development Tools)
.buildpath

# sbteclipse plugin
.target

# Tern plugin
.tern-project

# TeXlipse plugin
.texlipse

# STS (Spring Tool Suite)
.springBeans

# Code Recommenders
.recommenders/

# Mobile Tools for Java (J2ME)
.mtj.tmp/

# Package Files #
*.jar
*.war
*.ear

# virtual machine crash logs, see http://www.java.com/en/download/help/error_hotspot.xml
hs_err_pid*
### Example user template template
### Example user template

# IntelliJ project files
.idea
*.iml
out
gen
&lt;/code&gt;&lt;/pre&gt;</content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://7xlcno.com1.z0.glb.clouddn.com/gitgit_hg_small.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;什么是忽略文件？&quot;&gt;&lt;a href=&quot;#什么是忽略文件？&quot; class=&quot;headerlink&quot;
    
    </summary>
    
    
      <category term="git" scheme="http://gdky005.com/tags/git/"/>
    
  </entry>
  
</feed>
