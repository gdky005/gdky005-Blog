<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>孤独狂饮</title>
  <subtitle>只要有百分之一的梦想，就要付出百分之百的努力。努力不一定成功，但是不努力就一定不会成功！</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://gdky005.com/"/>
  <updated>2017-06-15T10:00:04.000Z</updated>
  <id>http://gdky005.com/</id>
  
  <author>
    <name>gdky005</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>徽章系列8：生成个性徽章</title>
    <link href="http://gdky005.com/2017/06/15/%E5%BE%BD%E7%AB%A0%E7%B3%BB%E5%88%978%EF%BC%9A%E7%94%9F%E6%88%90%E4%B8%AA%E6%80%A7%E5%BE%BD%E7%AB%A0/"/>
    <id>http://gdky005.com/2017/06/15/徽章系列8：生成个性徽章/</id>
    <published>2017-06-15T09:59:30.000Z</published>
    <updated>2017-06-15T10:00:04.000Z</updated>
    
    <content type="html">&lt;p&gt;官网： &lt;a href=&quot;https://shields.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://shields.io/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;有什么用？&quot;&gt;&lt;a href=&quot;#有什么用？&quot; class=&quot;headerlink&quot; title=&quot;有什么用？&quot;&gt;&lt;/a&gt;有什么用？&lt;/h3&gt;&lt;p&gt;彰显个人魅力，体现某种功能。例如咱们做一个跳转到我的博客的 个人徽章。&lt;/p&gt;
&lt;h3 id=&quot;怎么玩？&quot;&gt;&lt;a href=&quot;#怎么玩？&quot; class=&quot;headerlink&quot; title=&quot;怎么玩？&quot;&gt;&lt;/a&gt;怎么玩？&lt;/h3&gt;&lt;p&gt;滚动网页到最下面：&lt;img src=&quot;http://7xlcno.com1.z0.glb.clouddn.com/gbg/kaiyuan/md/gbg-kaiyuan-md-111.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;在对应的地方填写相应的东西（也支持中文哦）， 完成后点击后面的 Make Badge 按钮试试看。&lt;/p&gt;
&lt;p&gt;我想我的个人图标是这种浅蓝色： &lt;img src=&quot;http://7xlcno.com1.z0.glb.clouddn.com/gbg/kaiyuan/md/gbg-kaiyuan-md-112.png&quot; alt=&quot;&quot;&gt; ，那么我就在 color 中直接写：7AD6FD&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xlcno.com1.z0.glb.clouddn.com/gbg/kaiyuan/md/gbg-kaiyuan-md-113.png&quot; alt=&quot;&quot;&gt; 点击生成 一个地址， 先保存下面。&lt;/p&gt;
&lt;h3 id=&quot;这个原理是什么呢？-（回答最开始的问题）&quot;&gt;&lt;a href=&quot;#这个原理是什么呢？-（回答最开始的问题）&quot; class=&quot;headerlink&quot; title=&quot;这个原理是什么呢？ （回答最开始的问题）&quot;&gt;&lt;/a&gt;这个原理是什么呢？ （回答最开始的问题）&lt;/h3&gt;&lt;p&gt;徽章的格式即是 markdown 的格式: &lt;/p&gt;
&lt;pre&gt;&lt;code&gt;[![A\](B)\](D)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;A 表示的页面中需要显示的内容， B 表示的是图片的地址，D 表示的是点击后需要跳转的链接的地址。&lt;/p&gt;
&lt;h3 id=&quot;合成我的个人专属图标吧&quot;&gt;&lt;a href=&quot;#合成我的个人专属图标吧&quot; class=&quot;headerlink&quot; title=&quot;合成我的个人专属图标吧&quot;&gt;&lt;/a&gt;合成我的个人专属图标吧&lt;/h3&gt;&lt;p&gt;图片地址是上面存下来的。 前面显示内容：作者。按照上面的规范出来的结果就是：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;[![作者\](https:\//img.shields.io\/badge\/%E4%BD%9C%E8%80%85-gdky005-7AD6FD.svg)\](http:\//www.gdky005.com)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;把这段代码 粘贴到 我们的 md 文档中，个性专属徽章就出来了，而且点击后能到我们想去的地方。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xlcno.com1.z0.glb.clouddn.com/gbg/kaiyuan/md/gbg-kaiyuan-md-114.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;很酷吧，其实还可以做很多这样的事情。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;官网： &lt;a href=&quot;https://shields.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://shields.io/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;有什么用？&quot;&gt;&lt;a href=&quot;#有什么用？&quot; class=&quot;heade
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>在 Idea 中用 GUI 图形，生成 可执行的jar</title>
    <link href="http://gdky005.com/2017/05/03/%E5%9C%A8-Idea-%E4%B8%AD%E7%94%A8-GUI-%E5%9B%BE%E5%BD%A2%EF%BC%8C%E7%94%9F%E6%88%90-%E5%8F%AF%E6%89%A7%E8%A1%8C%E7%9A%84jar/"/>
    <id>http://gdky005.com/2017/05/03/在-Idea-中用-GUI-图形，生成-可执行的jar/</id>
    <published>2017-05-03T05:42:18.000Z</published>
    <updated>2017-05-03T06:21:03.000Z</updated>
    
    <content type="html">&lt;p&gt;参考地址： &lt;a href=&quot;http://stackoverflow.com/questions/13744779/exporting-intellij-idea-ui-form-to-eclipse&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://stackoverflow.com/questions/13744779/exporting-intellij-idea-ui-form-to-eclipse&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xlcno.com1.z0.glb.clouddn.com/blog/blog_idea_answer.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;选中这个东西：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xlcno.com1.z0.glb.clouddn.com/blog/blog_idea_answer_show.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;参考地址： &lt;a href=&quot;http://stackoverflow.com/questions/13744779/exporting-intellij-idea-ui-form-to-eclipse&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;htt
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>android 6.0 权限崩溃分析：android.system.ErrnoException: statvfs failed: ENOENT (No such file or directory)</title>
    <link href="http://gdky005.com/2017/05/03/android-6-0-%E6%9D%83%E9%99%90%E5%B4%A9%E6%BA%83%E5%88%86%E6%9E%90%EF%BC%9Aandroid-system-ErrnoException-statvfs-failed-ENOENT-No-such-file-or-directory/"/>
    <id>http://gdky005.com/2017/05/03/android-6-0-权限崩溃分析：android-system-ErrnoException-statvfs-failed-ENOENT-No-such-file-or-directory/</id>
    <published>2017-05-03T03:36:44.000Z</published>
    <updated>2017-05-03T03:37:31.000Z</updated>
    
    <content type="html">&lt;h3 id=&quot;问题复现&quot;&gt;&lt;a href=&quot;#问题复现&quot; class=&quot;headerlink&quot; title=&quot;问题复现&quot;&gt;&lt;/a&gt;问题复现&lt;/h3&gt;&lt;p&gt;在某些 6.0 设备的设备上 程序因为使用了 app 的外置 SD 卡的私有目录，在没有 存储权限的情况下，会崩溃，出现： &lt;/p&gt;
&lt;pre&gt;&lt;code&gt;05-03 09:53:02.337 W/System.err: java.lang.IllegalArgumentException: Invalid path: /storage/emulated/0/Android/data/gdky005.testexception/files
05-03 09:53:02.356 W/System.err:     at android.os.StatFs.doStat(StatFs.java:46)
05-03 09:53:02.370 W/System.err:     at android.os.StatFs.&amp;lt;init&amp;gt;(StatFs.java:39)
05-03 09:53:02.386 W/System.err:     at gdky005.testexception.SDCardUtil.getSDAvailableBlocks(SDCardUtil.java:166)
05-03 09:53:02.401 W/System.err:     at gdky005.testexception.MainActivity.testSDCard(MainActivity.java:69)
05-03 09:53:02.410 W/System.err:     at gdky005.testexception.MainActivity$1.onClick(MainActivity.java:26)
05-03 09:53:02.412 D/DhcpClient: Received packet: f4:5c:89:c2:6d:7b NAK, reason (none)
05-03 09:53:02.417 W/System.err:     at android.view.View.performClick(View.java:5637)
05-03 09:53:02.425 W/System.err:     at android.view.View$PerformClick.run(View.java:22429)
05-03 09:53:02.431 W/System.err:     at android.os.Handler.handleCallback(Handler.java:751)
05-03 09:53:02.435 W/System.err:     at android.os.Handler.dispatchMessage(Handler.java:95)
05-03 09:53:02.439 W/System.err:     at android.os.Looper.loop(Looper.java:154)
05-03 09:53:02.442 W/System.err:     at android.app.ActivityThread.main(ActivityThread.java:6119)
05-03 09:53:02.445 W/System.err:     at java.lang.reflect.Method.invoke(Native Method)
05-03 09:53:02.449 W/System.err:     at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:886)
05-03 09:53:02.452 W/System.err:     at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:776)
05-03 09:53:02.461 W/System.err: Caused by: android.system.ErrnoException: statvfs failed: ENOENT (No such file or directory)
05-03 09:53:02.463 W/System.err:     at libcore.io.Posix.statvfs(Native Method)
05-03 09:53:02.466 W/System.err:     at libcore.io.BlockGuardOs.statvfs(BlockGuardOs.java:304)
05-03 09:53:02.469 W/System.err:     at android.system.Os.statvfs(Os.java:506)
05-03 09:53:02.471 W/System.err:     at android.os.StatFs.doStat(StatFs.java:44)
05-03 09:53:02.472 W/System.err:     ... 13 more
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;具体崩溃路径是：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Invalid path: /storage/emulated/0/Android/data/gdky005.testexception/files
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;代码中调用：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;context.getExternalFilesDir(null);  //获取 外置 SD 卡 私有目录
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&quot;具体原因&quot;&gt;&lt;a href=&quot;#具体原因&quot; class=&quot;headerlink&quot; title=&quot;具体原因&quot;&gt;&lt;/a&gt;具体原因&lt;/h3&gt;&lt;p&gt;在主 app 中 因为使用了 targetSdkVersion 低于 android 6.0（23）的 19， 意味着 app 支持的最高目标版本是 android 4.4 （19）。 targetSdkVersion 是 Android 提供向前兼容的主要依据。 因此系统检查到 这个低于 android 6.0（23）， 默认给 app 自动开启了所有的权限（这也是之前一直疑惑的点）。当在 手机的系统大约等于 android 6.0（23），默认拥有了所有的权限，因此 app 可以正常运行。&lt;/p&gt;
&lt;p&gt;但是根据 听云 的崩溃手机信息来看，确实是崩溃了。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;java.lang.IllegalArgumentException: Invalid path: /storage/emulated/0/Android/data/
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;经过大量尝试以及测试，终于发现问题是处在  targetSdkVersion 这里。 如果 tartgetSdkVersion 大约23，即使关闭 SD 卡的存储权限， 也可以通过  context.getExternalFilesDir(null);  拿到 SD 卡的位置 app 私有存储目录。&lt;/p&gt;
&lt;p&gt;但是，当 tartgetSdkVersion \&amp;lt; 23, 关闭 SD 卡的存储权限后， 通过 context.getExternalFilesDir(null);  不可以拿到 SD 卡的外置 app 私有目录，会提示 「Invalid path: /storage/emulated/0/Android/data/」。&lt;/p&gt;
&lt;p&gt;因为在 6.0 以上的手机，检测到 app 的 tartgetSdkVersion \&amp;lt; 23，默认给了所有的权限，但是当 关闭 存储权限后，意味着 SD 卡的读写权限都没有了。当调用到 context.getExternalFilesDir(null);  的时候，系统认为 当前 app 的最高 运行版本是 低于 23 的，所有不会给 app 在 SD 卡创建 app 的私有目录。所有尝试获取 SD 卡的 app 私有目录的时候，就会获取不到路径，因为没有 SD 卡的读写权限啊。&lt;/p&gt;
&lt;p&gt;这里需要说明一下：当 tartgetSdkVersion &gt; 23，调用 context.getExternalFilesDir(null); ，系统会给 app 在 SD 卡的 Android/data/ + 包名 + files , 以这样的形式 创建一个 app 的私有文件夹，这也是 6.0 以后的新特性。例如：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;/storage/emulated/0/Android/data/gdky005.testexception/files
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;这个目录其实就等同于 Linux 里面的一个 app 的私有账户目录，只有当前 app 能访问，其他 app 直接访问不了，所以也被称之为 app 的外置私有目录。 app 的 tartgetSdkVersion \&amp;lt; 23， 因为系统没有给 它创建 私有目录，而且他没有 SD 卡的读写权限，所以 也不可以自行创建 app 的私有目录。&lt;/p&gt;
&lt;h3 id=&quot;总结&quot;&gt;&lt;a href=&quot;#总结&quot; class=&quot;headerlink&quot; title=&quot;总结&quot;&gt;&lt;/a&gt;总结&lt;/h3&gt;&lt;p&gt;由于 app 的 targetSdkVersion \&amp;lt; 23，默认 app 拥有所有的权限，但是当 用户手动禁用 SD 卡的存储权限，或者 Rom, 第三方服务 禁用，那么就会造成很严重的问题。无法使用外置app的私有目录，就会报错。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;不过在 原生的 android 系统里面会提示用户： &lt;img src=&quot;http://7xlcno.com1.z0.glb.clouddn.com/blog/sd_%20competence.png&quot; alt=&quot;&quot;&gt;&lt;/li&gt;
&lt;li&gt;如果第三方服务或者 rom 自动禁用的话，也许看不到警告。 &lt;/li&gt;
&lt;li&gt;例如三星等系统，在 app 安装好以后，会自动弹出权限框，让用户选择权限。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;处理措施：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;try catch&lt;/li&gt;
&lt;li&gt;targetSdkVersion &gt;= 23 参考：&lt;a href=&quot;http://chinagdg.org/2016/01/picking-your-compilesdkversion-minsdkversion-targetsdkversion/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://chinagdg.org/2016/01/picking-your-compilesdkversion-minsdkversion-targetsdkversion/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;尝试 自动创建文件 检测是否成功，并验证，如果失败，立即使用 app 的内置私有目录&lt;/li&gt;
&lt;/ol&gt;
</content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;问题复现&quot;&gt;&lt;a href=&quot;#问题复现&quot; class=&quot;headerlink&quot; title=&quot;问题复现&quot;&gt;&lt;/a&gt;问题复现&lt;/h3&gt;&lt;p&gt;在某些 6.0 设备的设备上 程序因为使用了 app 的外置 SD 卡的私有目录，在没有 存储权限的情况下，会崩溃，出现： 
    
    </summary>
    
      <category term="android" scheme="http://gdky005.com/categories/android/"/>
    
    
      <category term="android" scheme="http://gdky005.com/tags/android/"/>
    
  </entry>
  
  <entry>
    <title>如何选择 compileSdkVersion, minSdkVersion 和 targetSdkVersion</title>
    <link href="http://gdky005.com/2017/05/03/%E5%A6%82%E4%BD%95%E9%80%89%E6%8B%A9-compileSdkVersion-minSdkVersion-%E5%92%8C-targetSdkVersion/"/>
    <id>http://gdky005.com/2017/05/03/如何选择-compileSdkVersion-minSdkVersion-和-targetSdkVersion/</id>
    <published>2017-05-03T02:34:33.000Z</published>
    <updated>2017-05-03T02:35:30.000Z</updated>
    
    <content type="html">&lt;p&gt;&lt;img src=&quot;https://o0dsxp5zq.qnssl.com/wp-content/uploads/2016/01/androidversion.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;英文原文：&lt;a href=&quot;https://medium.com/google-developers/picking-your-compilesdkversion-minsdkversion-targetsdkversion-a098a0341ebd#.tz5zzucma&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Picking your compileSdkVersion, minSdkVersion, and targetSdkVersion&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;当你发布一个应用之后，(取决于具体的发布时间)可能没过几个月 Android 系统就发布了一个新版本。这对你的应用意味着什么，所有东西都不能用了？&lt;/p&gt;
&lt;p&gt;别担心，&lt;strong&gt;向前兼容&lt;/strong&gt;是 Android 非常关注的事情。用户在升级到新版 Android 的时候，用以前版本的 SDK 构建的现有应用应该不会出问题。这就是 &lt;strong&gt;compileSdkVersion&lt;/strong&gt;, &lt;strong&gt;minSdkVersion&lt;/strong&gt; 和 &lt;strong&gt;targetSdkVersion&lt;/strong&gt; 的作用：他们分别控制可以使用哪些 API ，要求的 API 级别是什么，以及应用的兼容模式。&lt;/p&gt;
&lt;h3 id=&quot;compileSdkVersion&quot;&gt;&lt;a href=&quot;#compileSdkVersion&quot; class=&quot;headerlink&quot; title=&quot;compileSdkVersion&quot;&gt;&lt;/a&gt;compileSdkVersion&lt;/h3&gt;&lt;p&gt;compileSdkVersion 告诉 Gradle 用哪个 Android SDK 版本编译你的应用。使用任何新添加的 API 就需要使用对应 Level 的 Android SDK。&lt;/p&gt;
&lt;p&gt;需要强调的是&lt;strong&gt;修改 compileSdkVersion 不会改变运行时的行为&lt;/strong&gt;。当你修改了 compileSdkVersion 的时候，可能会出现新的编译警告、编译错误，但新的 compileSdkVersion 不会被包含到 APK 中：它纯粹只是在编译的时候使用。（你真的应该修复这些警告，他们的出现一定是有原因的）&lt;/p&gt;
&lt;p&gt;因此我们强烈推荐&lt;strong&gt;总是使用最新的 SDK 进行编译&lt;/strong&gt;。在现有代码上使用新的编译检查可以获得很多好处，避免新弃用的 API ，并且为使用新的 API 做好准备。&lt;/p&gt;
&lt;p&gt;注意，如果使用 &lt;a href=&quot;http://developer.android.com/tools/support-library/index.html?utm_campaign=adp_series_sdkversion_010616&amp;amp;utm_source=medium&amp;amp;utm_medium=blog&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Support Library&lt;/a&gt;，那么使用最新发布的 Support Library 就需要使用最新的 SDK 编译。例如，要使用 23.1.1 版本的 Support Library ，compileSdkVersion 就必需至少是 23 （大版本号要一致！）。通常，新版的 Support Library 随着新的系统版本而发布，它为系统新增加的 API 和新特性提供兼容性支持。&lt;/p&gt;
&lt;h3 id=&quot;minSdkVersion&quot;&gt;&lt;a href=&quot;#minSdkVersion&quot; class=&quot;headerlink&quot; title=&quot;minSdkVersion&quot;&gt;&lt;/a&gt;minSdkVersion&lt;/h3&gt;&lt;p&gt;如果 compileSdkVersion 设置为可用的最新 API，那么 &lt;strong&gt;minSdkVersion 则是应用可以运行的最低要求&lt;/strong&gt;。minSdkVersion 是 Google Play 商店用来判断用户设备是否可以安装某个应用的标志之一。&lt;/p&gt;
&lt;p&gt;在开发时 minSdkVersion 也起到一个重要角色：&lt;a href=&quot;http://developer.android.com/tools/debugging/improving-w-lint.html?utm_campaign=adp_series_sdkversion_010616&amp;amp;utm_source=medium&amp;amp;utm_medium=blog&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;lint&lt;/a&gt; 默认会在项目中运行，它在你使用了高于 minSdkVersion  的 API 时会警告你，帮你避免调用不存在的 API 的运行时问题。如果只在较高版本的系统上才使用某些 API，通常使用&lt;a href=&quot;http://developer.android.com/training/basics/supporting-devices/platforms.html?utm_campaign=adp_series_sdkversion_010616&amp;amp;utm_source=medium&amp;amp;utm_medium=blog#version-codes&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;运行时检查系统版本&lt;/a&gt;的方式解决。&lt;/p&gt;
&lt;p&gt;请记住，你所使用的库，如 &lt;a href=&quot;http://developer.android.com/tools/support-library/features.html?utm_campaign=adp_series_sdkversion_010616&amp;amp;utm_source=medium&amp;amp;utm_medium=blog&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Support Library&lt;/a&gt; 或 &lt;a href=&quot;https://developers.google.com/android/guides/overview?utm_campaign=adp_series_sdkversion_010616&amp;amp;utm_source=medium&amp;amp;utm_medium=blog&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Google Play services&lt;/a&gt;，可能有他们自己的 minSdkVersion 。你的应用设置的 minSdkVersion 必需大于等于这些库的 minSdkVersion 。例如有三个库，它们的 minSdkVersion 分别是 4, 7 和 9 ，那么你的 minSdkVersion  必需至少是 9 才能使用它们。在少数情况下，你仍然想用一个比你应用的 minSdkVersion 还高的库（处理所有的边缘情况，确保它只在较新的平台上使用），你可以使用 &lt;a href=&quot;http://tools.android.com/tech-docs/new-build-system/user-guide/manifest-merger?utm_campaign=adp_series_sdkversion_010616&amp;amp;utm_source=medium&amp;amp;utm_medium=blog#TOC-tools:overrideLibrary-marker&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;tools:overrideLibrary&lt;/a&gt; 标记，但请做彻底的测试！&lt;/p&gt;
&lt;p&gt;当你决定使用什么 minSdkVersion 时候，你应该&lt;strong&gt;参考当前的 &lt;a href=&quot;http://developer.android.com/about/dashboards/index.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Android 分布统计&lt;/a&gt;&lt;/strong&gt;，它显示了最近 7 天所有访问 Google Play 的设备信息。他们就是你把应用发布到 Google Play 时的潜在用户。最终这是一个商业决策问题，取决于为了支持额外 3% 的设备，确保最佳体验而付出的开发和测试成本是否值得。&lt;/p&gt;
&lt;p&gt;当然，如果某个新的 API 是你整个应用的关键，那么确定 minSdkVersion 的值就比较容易了。不过要记得 14 亿设备中的 0.7％ 也是个不小的数字。&lt;/p&gt;
&lt;h3 id=&quot;targetSdkVersion&quot;&gt;&lt;a href=&quot;#targetSdkVersion&quot; class=&quot;headerlink&quot; title=&quot;targetSdkVersion&quot;&gt;&lt;/a&gt;targetSdkVersion&lt;/h3&gt;&lt;p&gt;三个版本号中最有趣的就是 targetSdkVersion 了。 &lt;strong&gt;targetSdkVersion 是 Android 提供向前兼容的主要依据&lt;/strong&gt;，在应用的 targetSdkVersion 没有更新之前系统不会应用最新的行为变化。这允许你在适应新的行为变化之前就可以使用新的 API （因为你已经更新了 compileSdkVersion 不是吗？）。&lt;/p&gt;
&lt;p&gt;targetSdkVersion 所暗示的许多行为变化都记录在 &lt;a href=&quot;http://developer.android.com/reference/android/os/Build.VERSION_CODES.html?utm_campaign=adp_series_sdkversion_010616&amp;amp;utm_source=medium&amp;amp;utm_medium=blog&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;VERSION_CODES&lt;/a&gt; 文档中了，但是所有恐怖的细节也都列在每次发布的平台亮点中了，在这个 &lt;a href=&quot;http://developer.android.com/guide/topics/manifest/uses-sdk-element.html?utm_campaign=adp_series_sdkversion_010616&amp;amp;utm_source=medium&amp;amp;utm_medium=blog#ApiLevels&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;API Level&lt;/a&gt; 表中可以方便地找到相应的链接。&lt;/p&gt;
&lt;p&gt;例如，&lt;a href=&quot;http://developer.android.com/about/versions/marshmallow/android-6.0-changes.html?utm_campaign=adp_series_sdkversion_010616&amp;amp;utm_source=medium&amp;amp;utm_medium=blog&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Android 6.0 变化文档&lt;/a&gt;中谈了 target 为 API 23 时会如何把你的应用转换到&lt;a href=&quot;http://android-developers.blogspot.com/2015/08/building-better-apps-with-runtime.html?utm_campaign=adp_series_sdkversion_010616&amp;amp;utm_source=medium&amp;amp;utm_medium=blog&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;运行时权限模型&lt;/a&gt;上，&lt;a href=&quot;http://developer.android.com/about/versions/android-4.4.html?utm_campaign=adp_series_sdkversion_010616&amp;amp;utm_source=medium&amp;amp;utm_medium=blog#Behaviors&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Android 4.4 行为&lt;/a&gt;变化阐述了 target 为 API 19 及以上时使用 &lt;a href=&quot;http://developer.android.com/reference/android/app/AlarmManager.html?utm_campaign=adp_series_sdkversion_010616&amp;amp;utm_source=medium&amp;amp;utm_medium=blog#set%28int,%20long,%20android.app.PendingIntent%29&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;set()&lt;/a&gt; 和 &lt;a href=&quot;http://developer.android.com/reference/android/app/AlarmManager.html?utm_campaign=adp_series_sdkversion_010616&amp;amp;utm_source=medium&amp;amp;utm_medium=blog#setRepeating%28int,%20long,%20long,%20android.app.PendingIntent%29&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;setRepeating()&lt;/a&gt; 设置 alarm 会有怎样的行为变化。&lt;/p&gt;
&lt;p&gt;由于某些行为的变化对用户是非常明显的（&lt;a href=&quot;http://android-developers.blogspot.com/2012/01/say-goodbye-to-menu-button.html?utm_campaign=adp_series_sdkversion_010616&amp;amp;utm_source=medium&amp;amp;utm_medium=blog&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;弃用的 menu 按钮&lt;/a&gt;，运行时权限等），所以&lt;strong&gt;将 target 更新为最新的 SDK 是所有应用都应该优先处理的事情&lt;/strong&gt;。但这不意味着你一定要使用所有新引入的功能，也不意味着你可以不做任何测试就盲目地更新 targetSdkVersion ，&lt;a href=&quot;http://android-developers.blogspot.com/2012/01/say-goodbye-to-menu-button.html?utm_campaign=adp_series_sdkversion_010616&amp;amp;utm_source=medium&amp;amp;utm_medium=blog&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;请一定在更新 targetSdkVersion 之前做测试！&lt;/a&gt;你的用户会感谢你的。&lt;/p&gt;
&lt;h3 id=&quot;Gradle-和-SDK-版本&quot;&gt;&lt;a href=&quot;#Gradle-和-SDK-版本&quot; class=&quot;headerlink&quot; title=&quot;Gradle 和 SDK 版本&quot;&gt;&lt;/a&gt;Gradle 和 SDK 版本&lt;/h3&gt;&lt;p&gt;所以设置正确的 compileSdkVersion, minSdkVersion 和 targetSdkVersion 很重要。如你所想， &lt;a href=&quot;http://developer.android.com/tools/building/plugin-for-gradle.html?utm_campaign=adp_series_sdkversion_010616&amp;amp;utm_source=medium&amp;amp;utm_medium=blog&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Gradle&lt;/a&gt; 和 &lt;a href=&quot;http://developer.android.com/tools/studio/index.html?utm_campaign=adp_series_sdkversion_010616&amp;amp;utm_source=medium&amp;amp;utm_medium=blog&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Android Studio&lt;/a&gt; 都在构建系统中集成了它们。在你的模块的 build.gradle 文件中（也可以在 Android Studio 的项目结构选项中）设置：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;android {
  compileSdkVersion 23
  buildToolsVersion &amp;quot;23.0.1&amp;quot;

  defaultConfig {
    applicationId &amp;quot;com.example.checkyourtargetsdk&amp;quot;
    minSdkVersion 7
    targetSdkVersion 23
    versionCode 1
    versionName “1.0”
  }
}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;编译时用到的 compileSdkVersion 是和构建工具版本一起设置的 Android 设置之一。其他两个稍有不同，他们在构建变体(&lt;a href=&quot;http://developer.android.com/tools/building/plugin-for-gradle.html?utm_campaign=adp_series_sdkversion_010616&amp;amp;utm_source=medium&amp;amp;utm_medium=blog#buildVariants&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;build variant&lt;/a&gt;)的那里声明。defaultConfig 是所有构建变体的基础，也是设置这些默认值的地方。你可以想象在一个更复杂的系统中，应用的某些版本可能会有不同的 minSdkVersion 。&lt;/p&gt;
&lt;p&gt;minSdkVersion 和 targetSdkVersion 与 compileSdkVersion 的另一个不同之处是它们会被包含进最终的 APK 文件中，如果你查看生成的 AndroidManifest.xml 文件，你会看到类似下面这样的标签：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;uses-sdk android:targetSdkVersion=&amp;quot;23&amp;quot; android:minSdkVersion=&amp;quot;7&amp;quot; /&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;如果你在 manifest 文件中手工设置，你会发现 Gradle 在构建时会忽略它们（尽管其它构建系统可能会明确依赖它们）。&lt;/p&gt;
&lt;h3 id=&quot;综合来看&quot;&gt;&lt;a href=&quot;#综合来看&quot; class=&quot;headerlink&quot; title=&quot;综合来看&quot;&gt;&lt;/a&gt;综合来看&lt;/h3&gt;&lt;p&gt;如果你按照上面示例那样配置，你会发现这三个值的关系是：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;minSdkVersion &amp;lt;= targetSdkVersion &amp;lt;= compileSdkVersion
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;这种直觉是合理的，如果 compileSdkVersion 是你的最大值，minSdkVersion 是最小值，那么最大值必需至少和最小值一样大且 target 必需在二者之间。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;理想上&lt;/strong&gt;，在稳定状态下三者的关系应该更像这样：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;minSdkVersion (lowest possible) &amp;lt;= 
            targetSdkVersion == compileSdkVersion (latest SDK)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;用较低的 minSdkVersion 来覆盖最大的人群，用最新的 SDK 设置 target 和 compile 来获得最好的外观和行为。#BuildBetterApps&lt;/p&gt;
&lt;h3 id=&quot;备注&quot;&gt;&lt;a href=&quot;#备注&quot; class=&quot;headerlink&quot; title=&quot;备注&quot;&gt;&lt;/a&gt;备注&lt;/h3&gt;&lt;p&gt;译者注： Android Development Patterns 系列视频见 YouTube 或 优酷 。&lt;br&gt;来自： &lt;a href=&quot;http://chinagdg.org/2016/01/picking-your-compilesdkversion-minsdkversion-targetsdkversion/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://chinagdg.org/2016/01/picking-your-compilesdkversion-minsdkversion-targetsdkversion/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://o0dsxp5zq.qnssl.com/wp-content/uploads/2016/01/androiddeveloperpatterns-1024x317.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://o0dsxp5zq.qnssl.com/wp-content/uploads/2016/01/androidversion.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;英文原文：&lt;a href=&quot;https://medium.com/goog
    
    </summary>
    
      <category term="android" scheme="http://gdky005.com/categories/android/"/>
    
    
      <category term="android" scheme="http://gdky005.com/tags/android/"/>
    
  </entry>
  
  <entry>
    <title>怎么关闭小米锁屏音乐？最终解决方案以及原理分析</title>
    <link href="http://gdky005.com/2017/03/31/%E6%80%8E%E4%B9%88%E5%85%B3%E9%97%AD%E5%B0%8F%E7%B1%B3%E9%94%81%E5%B1%8F%E9%9F%B3%E4%B9%90%EF%BC%9F%E6%9C%80%E7%BB%88%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88%E4%BB%A5%E5%8F%8A%E5%8E%9F%E7%90%86%E5%88%86%E6%9E%90/"/>
    <id>http://gdky005.com/2017/03/31/怎么关闭小米锁屏音乐？最终解决方案以及原理分析/</id>
    <published>2017-03-31T03:29:48.000Z</published>
    <updated>2017-03-31T03:30:41.000Z</updated>
    
    <content type="html">&lt;h3 id=&quot;相关图片我就不贴了，参考下面遇到的这些问题：&quot;&gt;&lt;a href=&quot;#相关图片我就不贴了，参考下面遇到的这些问题：&quot; class=&quot;headerlink&quot; title=&quot;相关图片我就不贴了，参考下面遇到的这些问题：&quot;&gt;&lt;/a&gt;相关图片我就不贴了，参考下面遇到的这些问题：&lt;/h3&gt;&lt;p&gt;&lt;a href=&quot;http://www.miui.com/thread-4005188-2-1.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.miui.com/thread-4005188-2-1.html&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://www.miui.com/forum.php?mod=viewthread&amp;amp;tid=2617209&amp;amp;mobile=1&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.miui.com/forum.php?mod=viewthread&amp;amp;tid=2617209&amp;amp;mobile=1&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://www.miui.com/forum.php?mod=viewthread&amp;amp;tid=3960406&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.miui.com/forum.php?mod=viewthread&amp;amp;tid=3960406&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://www.miui.com/thread-2592275-1-1.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.miui.com/thread-2592275-1-1.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;『启动最近任务，把音乐类的APP给关掉。』&lt;/p&gt;
&lt;h3 id=&quot;我这里有一个实际的场景，大家可以参考下：&quot;&gt;&lt;a href=&quot;#我这里有一个实际的场景，大家可以参考下：&quot; class=&quot;headerlink&quot; title=&quot;我这里有一个实际的场景，大家可以参考下：&quot;&gt;&lt;/a&gt;我这里有一个实际的场景，大家可以参考下：&lt;/h3&gt;&lt;p&gt;我的小米53G 内存版本手机 之前启动的时候手机可用内存基本都1G 左右，清理完内存后是1.3G。但是最近清理后总发现是1G 左右，内存平时都是800-900MB，也没太在意。&lt;/p&gt;
&lt;p&gt;最近发现每次锁屏后总是显示小米音乐锁屏界面，可难看了，用着很是别扭，之前还有 小米锁屏画报展示的，但是这几天总是显示这个音乐锁屏界面。感觉很不爽，越是网上各种搜索，结果大家还都是没什么好版本，所以也提供了一些，但是针对某些场景，不适用于我此刻的情况。&lt;br&gt;先罗列下基本的解决办法吧：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;如果你当前在使用音乐软件听歌，这个肯定是去不掉的，因为音乐软件针对小米系统做了专门的功能，小米应用市场上线有这个要求哦。&lt;/li&gt;
&lt;li&gt;重启手机后 就没有了。&lt;/li&gt;
&lt;li&gt;刚在听歌，但是已经不听歌了，把这个 app 从 最近的任务 管理中杀掉即可。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;基本就这几种情况。但是我目前和大多数人一样，遇到了一种极其奇葩的问题，那就是我明明没有听歌，最近任务里面也没有音乐软件，清理内存后 还是 显示音乐锁屏界面啊。 即使我重新启动机器也不行，这就奇了怪了。之前锁屏的时候有 小米锁屏画报，还能展示各种图片，看着赏心悦目，但是现在那个东东都不出来了，什么情况呢？&lt;/p&gt;
&lt;h3 id=&quot;下面我用-一个-程序员-的角度去分析这种情况。&quot;&gt;&lt;a href=&quot;#下面我用-一个-程序员-的角度去分析这种情况。&quot; class=&quot;headerlink&quot; title=&quot;下面我用 一个 程序员 的角度去分析这种情况。&quot;&gt;&lt;/a&gt;下面我用 一个 程序员 的角度去分析这种情况。&lt;/h3&gt;&lt;p&gt;首先呢，我记得我们之前开发 音乐类 app 的时候，上线小米应用商店，不给通过，说必须加小米锁屏。然后我们就加上了，默认情况下，当用户锁屏后再启动会有自己的锁屏界面，但是有时候小米为了一些性能方面的考虑不让显示，需要直接显示他们的小米锁屏音乐界面。因此基本上市场上的音乐类软件都有小米锁屏界面的 sdk 哦。因为每个软件都有锁屏的 sdk, 所以当听音乐的时候，就会触发这个。你锁屏后再次解锁，就能看到这个了，这是大前提。&lt;/p&gt;
&lt;h3 id=&quot;下面开始重点来了。&quot;&gt;&lt;a href=&quot;#下面开始重点来了。&quot; class=&quot;headerlink&quot; title=&quot;下面开始重点来了。&quot;&gt;&lt;/a&gt;下面开始重点来了。&lt;/h3&gt;&lt;p&gt;现在没有运行音乐软件，但是还是出现了这个，这是怎么回事呢？ 去最近的任务管理也看到不？这个锁屏 SDK 的界面为什么出来了？&lt;br&gt;我在搜索相关资料的时候，一个人的回答提醒了我：『启动最近任务，把音乐类的APP给关掉。』&lt;/p&gt;
&lt;p&gt;我的任务管理中没有啊，突然意识到可能是之前在任务管理中把某些音乐类软件的进程锁定。才造成这种情况，那么我就是试试把手机上所以的音乐类软件打开，其实也就那么几个，网易音乐，酷我，企鹅 FM。然后惊奇的发现，果然如我所料，企鹅 FM 在任务管理中 的小图标上有一个锁。这次我把这个小锁上滑去掉后，再次清理内存就发现，内存一下子就剩 1.3GB 了。 锁屏，解锁，终于出现了小米锁屏画报，这是太好了，这个问题就这样解决了。关键问题还是在这里：音乐类 app 被锁定后，清理内存的时候，会把这个任务干掉，但是由于被锁定了，其实还在内存中。只是在图标上看不到而已，如果手机被 root了，可以用其他的软件清理内存，就可以了。这里还需要注意一点，虽然手机被重启了，但是由于 app 是锁定的状态，所以还是会被启动，app 一启动，就能看得见那个 小米锁屏界面。但是你在任务管理中却看不见，这也是 小米系统的一个 bug 吧。目前这样解决即可。&lt;/p&gt;
&lt;p&gt;如果还有疑问，或者不懂的地方，加 weixin: gdky005, 备注锁屏即可。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;相关图片我就不贴了，参考下面遇到的这些问题：&quot;&gt;&lt;a href=&quot;#相关图片我就不贴了，参考下面遇到的这些问题：&quot; class=&quot;headerlink&quot; title=&quot;相关图片我就不贴了，参考下面遇到的这些问题：&quot;&gt;&lt;/a&gt;相关图片我就不贴了，参考下面遇到的这些问
    
    </summary>
    
    
      <category term="原理" scheme="http://gdky005.com/tags/%E5%8E%9F%E7%90%86/"/>
    
  </entry>
  
</feed>
