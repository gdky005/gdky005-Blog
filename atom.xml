<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>孤独狂饮</title>
  
  <subtitle>只要有百分之一的梦想，就要付出百分之百的努力。努力不一定成功，但是不努力就一定不会成功！</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://gdky005.com/"/>
  <updated>2019-08-29T03:25:13.012Z</updated>
  <id>http://gdky005.com/</id>
  
  <author>
    <name>gdky005</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Flutter 学习脑图笔记，可方便查找与搜索！</title>
    <link href="http://gdky005.com/2019/08/29/Flutter-%E5%AD%A6%E4%B9%A0%E8%84%91%E5%9B%BE%E7%AC%94%E8%AE%B0%EF%BC%8C%E5%8F%AF%E6%96%B9%E4%BE%BF%E6%9F%A5%E6%89%BE%E4%B8%8E%E6%90%9C%E7%B4%A2%EF%BC%81/"/>
    <id>http://gdky005.com/2019/08/29/Flutter-学习脑图笔记，可方便查找与搜索！/</id>
    <published>2019-08-29T03:24:42.000Z</published>
    <updated>2019-08-29T03:25:13.012Z</updated>
    
    <content type="html"><![CDATA[<h1 id="FlutterNodeTips"><a href="#FlutterNodeTips" class="headerlink" title="FlutterNodeTips"></a>FlutterNodeTips</h1><p>Flutter 学习笔记思维导图，包含常用组件的基础属性，可在源文件中直接搜索，也可作为一个常用必备的手册。</p><p><img src="https://github.com/gdky005/FlutterNodeTips/blob/master/FlutterNode_%20thumb.png" alt></p><h2 id="适合人群"><a href="#适合人群" class="headerlink" title="适合人群"></a>适合人群</h2><ul><li>新手：便于新手学习和理解常用的组件，以及基础属性。</li><li>大小牛：以备不时需的查找。</li></ul><h2 id="如何使用？"><a href="#如何使用？" class="headerlink" title="如何使用？"></a>如何使用？</h2><p>包含三种类型的文件，具体如下：</p><ul><li>PNG  基础图片类型，可以浏览全部，放大缩小，可分区域查看。</li><li>PDF  标准的 PDF，不仅是查阅，也可以直接根据关键字搜索。</li><li>MindNode  原始文件，可以在此基础上查找和修改等。</li></ul><h2 id="源文件"><a href="#源文件" class="headerlink" title="源文件"></a>源文件</h2><p><a href="https://github.com/gdky005/FlutterNodeTips" target="_blank" rel="noopener">https://github.com/gdky005/FlutterNodeTips</a></p><h2 id="其他更多"><a href="#其他更多" class="headerlink" title="其他更多"></a>其他更多</h2><p><a href="https://www.gdky005.com" target="_blank" rel="noopener">https://www.gdky005.com</a></p><h2 id="Flutter-学习交流群"><a href="#Flutter-学习交流群" class="headerlink" title="Flutter 学习交流群"></a>Flutter 学习交流群</h2><p>添加：gdky005，拉群，也可直接扫码进入。</p><p><img src="https://github.com/gdky005/FlutterNodeTips/blob/master/organization.png" alt></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;FlutterNodeTips&quot;&gt;&lt;a href=&quot;#FlutterNodeTips&quot; class=&quot;headerlink&quot; title=&quot;FlutterNodeTips&quot;&gt;&lt;/a&gt;FlutterNodeTips&lt;/h1&gt;&lt;p&gt;Flutter 学习笔记思维导图，包
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>业务开发中自定义 EditText 光标不显示？</title>
    <link href="http://gdky005.com/2019/04/14/%E4%B8%9A%E5%8A%A1%E5%BC%80%E5%8F%91%E4%B8%AD%E8%87%AA%E5%AE%9A%E4%B9%89-EditText-%E5%85%89%E6%A0%87%E4%B8%8D%E6%98%BE%E7%A4%BA%EF%BC%9F/"/>
    <id>http://gdky005.com/2019/04/14/业务开发中自定义-EditText-光标不显示？/</id>
    <published>2019-04-14T03:28:03.000Z</published>
    <updated>2019-04-14T03:38:51.894Z</updated>
    
    <content type="html"><![CDATA[<p>这里记录一个业务开发遇到的问题。最近996赶项目，UI 妹子说你这个输入框的光标颜色是红色的，不好看，我要换成橘黄的。好吧，那就修改下。<br>直接使用这个代码：</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;EditText</span><br><span class="line">            android:<span class="attribute">id</span>=<span class="string">"@+id/et_forget_password_verify_code"</span></span><br><span class="line">            <span class="attribute">style</span>=<span class="string">"@style/EditTextNoPaddingStyle"</span></span><br><span class="line">            android:<span class="attribute">inputType</span>=<span class="string">"textVisiblePassword"</span></span><br><span class="line">            android:<span class="attribute">hint</span>=<span class="string">"@string/register_verify_code_hint"</span></span><br><span class="line">            android:<span class="attribute">maxLength</span>=<span class="string">"6"</span>/&gt;</span><br></pre></td></tr></table></figure><p>style.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">name</span>=<span class="string">"EditTextNoPaddingStyle"</span> <span class="attr">parent</span>=<span class="string">"LayoutMW"</span>&gt;</span></span><br><span class="line">    ...</span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">item</span> <span class="attr">name</span>=<span class="string">"android:textCursorDrawable"</span>&gt;</span>@color/color_edit_text_cursor<span class="tag">&lt;/<span class="name">item</span>&gt;</span></span></span><br><span class="line">    ...</span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure><p>结果在三星手机显示正常，但是测试同学说在 小米和华为手机，不显示光标，只有输入一个后，才会显示，但是光标也不闪动。</p><p>最后排查了下，具体原因是：textCursorDrawable 后面一定要跟 drawable ，否则某些手机厂商定制系统兼容不好，就显示不出来，或者不闪动。</p><p>解决办法是：<br>添加 edit_text_cursor.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="utf-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">shape</span> <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">android:shape</span>=<span class="string">"rectangle"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">size</span> <span class="attr">android:width</span>=<span class="string">"@dimen/dp_05"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span> <span class="attr">style</span>=<span class="string">"font-family: Arial, Helvetica, sans-serif;"</span>&gt;</span><span class="comment">&lt;!-- 光标宽度可以自己定义 --&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">solid</span> <span class="attr">android:color</span>=<span class="string">"@color/color_edit_text_cursor"</span>/&gt;</span><span class="comment">&lt;!-- 光标颜色可以自己定义 --&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">shape</span>&gt;</span></span><br></pre></td></tr></table></figure><p>style.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">name</span>=<span class="string">"EditTextNoPaddingStyle"</span> <span class="attr">parent</span>=<span class="string">"LayoutMW"</span>&gt;</span></span><br><span class="line">    ...</span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">item</span> <span class="attr">name</span>=<span class="string">"android:textCursorDrawable"</span>&gt;</span>@drawable/edit_text_cursor<span class="tag">&lt;/<span class="name">item</span>&gt;</span></span></span><br><span class="line">    ...</span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure><p>这样就显示正常了。</p><p>同此的理，很多我们在自己的手机或者测试机显示正常，但是不代表在所有手机显示正常，所有要多兼容，选择最安全的方式。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;这里记录一个业务开发遇到的问题。最近996赶项目，UI 妹子说你这个输入框的光标颜色是红色的，不好看，我要换成橘黄的。好吧，那就修改下。&lt;br&gt;直接使用这个代码：&lt;/p&gt;
&lt;figure class=&quot;highlight routeros&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td c
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>QPM 之同类 PM 对比</title>
    <link href="http://gdky005.com/2019/01/03/QPM-%E4%B9%8B%E5%90%8C%E7%B1%BB-PM-%E5%AF%B9%E6%AF%94/"/>
    <id>http://gdky005.com/2019/01/03/QPM-之同类-PM-对比/</id>
    <published>2019-01-03T07:23:22.000Z</published>
    <updated>2019-01-03T07:23:46.334Z</updated>
    
    <content type="html"><![CDATA[<p>QPM 的注意事项以及和其他同类 PM 类软件的对比。</p><h2 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h2><p>QPM 的悬浮窗如果开启过多的功能，可能会影响性能，推荐：需要什么功能，就开启什么开关，这样把影响降低到最低。</p><h2 id="QPM-与其他同类-PM-的区别"><a href="#QPM-与其他同类-PM-的区别" class="headerlink" title="QPM 与其他同类 PM 的区别"></a>QPM 与其他同类 PM 的区别</h2><p>与其他同类 QPM 工具相比，有以下优势：</p><ol><li>任何一个内置的 QPM 的 App, 可以直接可视化相关性能和数据；</li><li>内置多个参数指标开关，想用哪个就开哪个；</li><li>精简模式，只显示关注的数据指标；</li><li>自定义了五种模板，可以通过简单的API，直接将 app 的变化数据动态展示；</li><li>屏幕录制；</li><li>H5页面性能监控；</li><li>四大组件的展示，并可以直接跳转到对应的 Activity 中；</li><li>SharedPreferences 文件直接浏览和修改相应的 key 值；</li><li>通过 OkHttp 展示相关的网络请求信息；</li><li>当前 App 的流量使用情况。</li></ol><h2 id="开源地址"><a href="#开源地址" class="headerlink" title="开源地址"></a>开源地址</h2><p>QPM:  <a href="https://github.com/ZhuoKeTeam/QPM" target="_blank" rel="noopener">https://github.com/ZhuoKeTeam/QPM</a></p><p>请给 QPM  一个 Star 吧! </p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;QPM 的注意事项以及和其他同类 PM 类软件的对比。&lt;/p&gt;
&lt;h2 id=&quot;注意事项&quot;&gt;&lt;a href=&quot;#注意事项&quot; class=&quot;headerlink&quot; title=&quot;注意事项&quot;&gt;&lt;/a&gt;注意事项&lt;/h2&gt;&lt;p&gt;QPM 的悬浮窗如果开启过多的功能，可能会影响性能，推
      
    
    </summary>
    
      <category term="QPM" scheme="http://gdky005.com/categories/QPM/"/>
    
    
      <category term="QPM, 性能优化, 组件" scheme="http://gdky005.com/tags/QPM-%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96-%E7%BB%84%E4%BB%B6/"/>
    
  </entry>
  
  <entry>
    <title>QPM 之悬浮窗设置信息</title>
    <link href="http://gdky005.com/2019/01/03/QPM-%E4%B9%8B%E6%82%AC%E6%B5%AE%E7%AA%97%E8%AE%BE%E7%BD%AE%E4%BF%A1%E6%81%AF/"/>
    <id>http://gdky005.com/2019/01/03/QPM-之悬浮窗设置信息/</id>
    <published>2019-01-03T07:22:18.000Z</published>
    <updated>2019-01-03T07:22:44.263Z</updated>
    
    <content type="html"><![CDATA[<p>QPM 开源地址：<a href="https://github.com/ZhuoKeTeam/QPM" target="_blank" rel="noopener">https://github.com/ZhuoKeTeam/QPM</a></p><p>更多实用信息：</p><ol><li>手机的基本信息</li><li>AndroidManifest.xml 信息</li><li>App 中所有的 SharePreference 信息</li><li>可配置的开关</li><li>网络接口</li></ol><h2 id="手机基础信息"><a href="#手机基础信息" class="headerlink" title="手机基础信息"></a>手机基础信息</h2><ol><li>再也不用 去手机的复杂界面查看各种数据；</li><li>再也不用 下载 辅助性 apk 获取信息；</li><li>再也不用 因为某些信息没有，查询半天。</li></ol><p>是否 Root, SDK 版本，手机型号，网络，名称，IP，Mac 地址，屏幕分辨率，CPU 架构等等信息。遇到关键的数据，还能复制。</p><p>这里获取的数据更全面<br><img src="https://raw.githubusercontent.com/gdky005/PictureResource/master/qpm/qpm_2.png" alt></p><h2 id="AndroidManifest-xml-信息"><a href="#AndroidManifest-xml-信息" class="headerlink" title="AndroidManifest.xml 信息"></a>AndroidManifest.xml 信息</h2><p>包名，版本号，App 的所有权限，构建 SDK 的版本信息，还有最最重要的注册的四大组件（Activity，Service，Receiver，Provider）。里面的 Activity 可以直接点击后跳转，Service可以查看有多少本地服务，Receiver 可以很明确的知道当前注册了多少广播，Provider 可以查看本地的内容提供者。</p><h2 id="应用的所有-SP-信息"><a href="#应用的所有-SP-信息" class="headerlink" title="应用的所有 SP 信息"></a>应用的所有 SP 信息</h2><p>Root 手机我们直接通过 文件管理器 可以直接查看 SP 文件。</p><p>如果没有 Root 呢？ 笨办法，通过调试代码或者 log 打印输出。</p><p>包含整个 App 的所有 SP 信息，可以查看单个 SP 里面的信息，最最好的是还能直接修改 对应的 Value。</p><p>极大提升程序员们的开发效率。 </p><h2 id="其他开关"><a href="#其他开关" class="headerlink" title="其他开关"></a>其他开关</h2><p>我们提供的了这些基础功能，打开开关后，可以直接在悬浮窗展示相关数据信息。</p><p>自我控制聚焦点，只关注需要的信息。</p><p>所有的开关，可以打开，关闭，对于某些影响性能的操作，可以关闭其他所有的东西，保留关注的指标。</p><p>每一个开关都可以长按开关名称的这一条，上下移动位置，调整开关的顺序。</p><h2 id="网络接口"><a href="#网络接口" class="headerlink" title="网络接口"></a>网络接口</h2><p>获取最近50条网络请求数据，可以查看更多信息：</p><ol><li>请求方式；</li><li>返回状态码；</li><li>请求时长；</li><li>请求大小；</li><li>返回数据大小 </li></ol><p>需要 OkHttp，然后可以获取网络请求的所有数据，包括请求 Request Header，Request Response，Response等数据。</p><h2 id="精简模式"><a href="#精简模式" class="headerlink" title="精简模式"></a>精简模式</h2><p>关注的数据太多会占满屏幕，可以开启精简模式，默认显示开关列表最顶部的两个选项。开关列表可以通过拖动把选项位置移动到想要的前两项。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;QPM 开源地址：&lt;a href=&quot;https://github.com/ZhuoKeTeam/QPM&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://github.com/ZhuoKeTeam/QPM&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;更多实用信息：&lt;
      
    
    </summary>
    
      <category term="QPM" scheme="http://gdky005.com/categories/QPM/"/>
    
    
      <category term="QPM, 性能优化, 组件" scheme="http://gdky005.com/tags/QPM-%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96-%E7%BB%84%E4%BB%B6/"/>
    
  </entry>
  
  <entry>
    <title>QPM 之悬浮窗助力性能优化</title>
    <link href="http://gdky005.com/2019/01/03/QPM-%E4%B9%8B%E6%82%AC%E6%B5%AE%E7%AA%97%E5%8A%A9%E5%8A%9B%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96/"/>
    <id>http://gdky005.com/2019/01/03/QPM-之悬浮窗助力性能优化/</id>
    <published>2019-01-03T07:21:18.000Z</published>
    <updated>2019-01-03T07:21:43.812Z</updated>
    
    <content type="html"><![CDATA[<p>QPM 开源地址：<a href="https://github.com/ZhuoKeTeam/QPM" target="_blank" rel="noopener">https://github.com/ZhuoKeTeam/QPM</a></p><p>让我们来尝试做一些可以可视化的悬浮窗功能吧，里面可以展示一些基础的性能指标数据。</p><p>启动 App 后便可以看到一些数据，解决未 root 手机无法获取数据的疑难杂症。</p><p><img src="https://raw.githubusercontent.com/gdky005/PictureResource/master/qpm/qpm_1.jpg" alt></p><h3 id="包名"><a href="#包名" class="headerlink" title="包名"></a>包名</h3><p>一个 apk 会有一个固定的包名，但是在某些特殊场景下，却会展示多个包名，例如：测试包，正式包，变种包，推送测试包等等，给 QPM 展示当前应用的包名，在某些时候可以方便我们定位问题。举个例子：我们之前一直在测试推送包，有时候需要切换到正式包，在两个包中切换各种RD，ST环境，最后我都不记得我用的什么包，只能卸载了，重新安装。QPM 的悬浮窗可以直接展示当前应用的包名，看一眼就知道了，其实也可以把当前进程+线程号打印出来，方便开发同学分析问题。</p><h3 id="当前-Activity-的名字"><a href="#当前-Activity-的名字" class="headerlink" title="当前 Activity 的名字"></a>当前 Activity 的名字</h3><p>试想，做了5年的项目，交给新来你接手？或者同事离职，丢下一堆坑，需要你来填坑。根据代码梳理流程后，也不一定能立刻接手，如果根据页面找Activity，一个字————累！</p><p>如果能直接展示当前界面的 Activity 名字，是不是更容易一些呢？ </p><h3 id="CPU-和-内存"><a href="#CPU-和-内存" class="headerlink" title="CPU 和 内存"></a>CPU 和 内存</h3><p>界面怎么这么卡啊，快优化下。懵逼的你可能会想这要从哪里入手？先从界面渲染，还是从业务角度? 关键是我们需要知道在页面的什么场景下会出现问题，有一个直观指标就容易判断了。当 CPU 到达 200% 的时候，内存剧增，那肯定有问题，可以用性能工具对该页面详细的分析。 一般先看看在该界面的 CPU 和 内存是否异常，再结合业务逻辑把相关的数据提前或者延迟获取，减少同一时刻并发获取，从而减少主界面卡顿。</p><h3 id="线程数"><a href="#线程数" class="headerlink" title="线程数"></a>线程数</h3><p>这是什么鬼？还记得曾经的老大说要复用线程，别单独搞么。如果你发现 200 多个线程，那你就得考虑下是否需要线程池了。这里可以依据现有逻辑来处理，并非绝对性的。</p><h3 id="Activity-堆栈"><a href="#Activity-堆栈" class="headerlink" title="Activity 堆栈"></a>Activity 堆栈</h3><p>还记得刚学 Activity 那会儿么，Activity的 四种 LaunchMode，这里可以记录一个栈里面的 Activity 的顺序。方便你直观了解栈中的情况。</p><h3 id="流量"><a href="#流量" class="headerlink" title="流量"></a>流量</h3><p>我们 App 的请求用了多少流量？ 可能在 3G/4G 关注点比较多，虽然现在绝多数都是 WIFI，但是我们的用户在一定环境下会使用 3G/4G, 所以还是又必须关注下。</p><p>网络情况如何？ 比方说我用的是 Wifi, 在某些角落网速很差，甚至没流量数据，我们都希望可以了解。</p><p>在某个时刻，页面是空白的？为什么没有数据呢，可以看看尝试看看下载速度。</p><p>尤其对现在约来越多的某些小视频，大家可能会关心大约用了多少流量。</p><h3 id="屏幕录制"><a href="#屏幕录制" class="headerlink" title="屏幕录制"></a>屏幕录制</h3><p>基于 Android 5.0 的 API，录制整个屏幕，方便大家复现某些关于操作记录的问题。</p><h3 id="监控-H5-页面"><a href="#监控-H5-页面" class="headerlink" title="监控 H5 页面"></a>监控 H5 页面</h3><p>需要配合相应的设置，我们就可以在 WebView 中对任何一个网页进行异步检测，例如获取当前页面地址，首页白屏加载时间，以及每个资源的请求时间，和请求资源地址。非常容易。</p><h3 id="自定义的五种对外样式"><a href="#自定义的五种对外样式" class="headerlink" title="自定义的五种对外样式"></a>自定义的五种对外样式</h3><p>以下的一个唯一标识，表示一个 item, 如果要添加多个，可以把唯一标示设置为不同的。</p><ul><li>大文件框样式</li></ul><p>QPMManager.getInstance().showBigText(flag, bigText);<br>第一个参数 flag 是唯一标示, 第二个 bigText 是自定义悬浮窗中显示的所有文本数据。</p><ul><li>键值对文本样式</li></ul><p>QPMManager.getInstance().showKeyValue(flag, key, value);<br>第一个参数 flag 是唯一标示, 第二个 key 是自定义悬浮窗中显示的 key 值，第三个是 悬浮窗中的 value 值。</p><ul><li>键图样式</li></ul><p>QPMManager.getInstance().showKeyPic(flag, key, picRes);<br>第一个参数 flag 是唯一标示, 第二个 key 是自定义悬浮窗中显示的 key 值，第三个是 悬浮窗中的 pic Res 中的资源值。</p><ul><li>图值样式</li></ul><p>QPMManager.getInstance().showPicValue(flag, picId, value);<br>第一个参数 flag 是唯一标示, 第二个 key 是自定义悬浮窗中显示的 key 值，第三个是 悬浮窗中的 pic Res 中的资源值 (可以放到你们的主 App 中)。</p><ul><li>自定义样式</li></ul><p>QPMManager.getInstance().showCustom(flag,QPMTemplateCustomRenderer);<br>第一个参数 flag 是唯一标示, 第二个 QPMTemplateCustomRenderer 是自定义悬浮窗中你们要自己添加的布局，可以写一个类，继承自QPMTemplateCustomRenderer，实现里面的方法，悬浮窗上就可以显示对应的内容。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;QPM 开源地址：&lt;a href=&quot;https://github.com/ZhuoKeTeam/QPM&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://github.com/ZhuoKeTeam/QPM&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;让我们来尝试做一
      
    
    </summary>
    
      <category term="QPM" scheme="http://gdky005.com/categories/QPM/"/>
    
    
      <category term="QPM, 性能优化, 组件" scheme="http://gdky005.com/tags/QPM-%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96-%E7%BB%84%E4%BB%B6/"/>
    
  </entry>
  
</feed>
