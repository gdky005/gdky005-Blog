<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>孤独狂饮</title>
  <subtitle>只要有百分之一的梦想，就要付出百分之百的努力。努力不一定成功，但是不努力就一定不会成功！</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://gdky005.com/"/>
  <updated>2017-03-31T03:30:41.000Z</updated>
  <id>http://gdky005.com/</id>
  
  <author>
    <name>gdky005</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>怎么关闭小米锁屏音乐？最终解决方案以及原理分析</title>
    <link href="http://gdky005.com/2017/03/31/%E6%80%8E%E4%B9%88%E5%85%B3%E9%97%AD%E5%B0%8F%E7%B1%B3%E9%94%81%E5%B1%8F%E9%9F%B3%E4%B9%90%EF%BC%9F%E6%9C%80%E7%BB%88%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88%E4%BB%A5%E5%8F%8A%E5%8E%9F%E7%90%86%E5%88%86%E6%9E%90/"/>
    <id>http://gdky005.com/2017/03/31/怎么关闭小米锁屏音乐？最终解决方案以及原理分析/</id>
    <published>2017-03-31T03:29:48.000Z</published>
    <updated>2017-03-31T03:30:41.000Z</updated>
    
    <content type="html">&lt;h3 id=&quot;相关图片我就不贴了，参考下面遇到的这些问题：&quot;&gt;&lt;a href=&quot;#相关图片我就不贴了，参考下面遇到的这些问题：&quot; class=&quot;headerlink&quot; title=&quot;相关图片我就不贴了，参考下面遇到的这些问题：&quot;&gt;&lt;/a&gt;相关图片我就不贴了，参考下面遇到的这些问题：&lt;/h3&gt;&lt;p&gt;&lt;a href=&quot;http://www.miui.com/thread-4005188-2-1.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.miui.com/thread-4005188-2-1.html&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://www.miui.com/forum.php?mod=viewthread&amp;amp;tid=2617209&amp;amp;mobile=1&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.miui.com/forum.php?mod=viewthread&amp;amp;tid=2617209&amp;amp;mobile=1&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://www.miui.com/forum.php?mod=viewthread&amp;amp;tid=3960406&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.miui.com/forum.php?mod=viewthread&amp;amp;tid=3960406&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://www.miui.com/thread-2592275-1-1.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.miui.com/thread-2592275-1-1.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;『启动最近任务，把音乐类的APP给关掉。』&lt;/p&gt;
&lt;h3 id=&quot;我这里有一个实际的场景，大家可以参考下：&quot;&gt;&lt;a href=&quot;#我这里有一个实际的场景，大家可以参考下：&quot; class=&quot;headerlink&quot; title=&quot;我这里有一个实际的场景，大家可以参考下：&quot;&gt;&lt;/a&gt;我这里有一个实际的场景，大家可以参考下：&lt;/h3&gt;&lt;p&gt;我的小米53G 内存版本手机 之前启动的时候手机可用内存基本都1G 左右，清理完内存后是1.3G。但是最近清理后总发现是1G 左右，内存平时都是800-900MB，也没太在意。&lt;/p&gt;
&lt;p&gt;最近发现每次锁屏后总是显示小米音乐锁屏界面，可难看了，用着很是别扭，之前还有 小米锁屏画报展示的，但是这几天总是显示这个音乐锁屏界面。感觉很不爽，越是网上各种搜索，结果大家还都是没什么好版本，所以也提供了一些，但是针对某些场景，不适用于我此刻的情况。&lt;br&gt;先罗列下基本的解决办法吧：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;如果你当前在使用音乐软件听歌，这个肯定是去不掉的，因为音乐软件针对小米系统做了专门的功能，小米应用市场上线有这个要求哦。&lt;/li&gt;
&lt;li&gt;重启手机后 就没有了。&lt;/li&gt;
&lt;li&gt;刚在听歌，但是已经不听歌了，把这个 app 从 最近的任务 管理中杀掉即可。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;基本就这几种情况。但是我目前和大多数人一样，遇到了一种极其奇葩的问题，那就是我明明没有听歌，最近任务里面也没有音乐软件，清理内存后 还是 显示音乐锁屏界面啊。 即使我重新启动机器也不行，这就奇了怪了。之前锁屏的时候有 小米锁屏画报，还能展示各种图片，看着赏心悦目，但是现在那个东东都不出来了，什么情况呢？&lt;/p&gt;
&lt;h3 id=&quot;下面我用-一个-程序员-的角度去分析这种情况。&quot;&gt;&lt;a href=&quot;#下面我用-一个-程序员-的角度去分析这种情况。&quot; class=&quot;headerlink&quot; title=&quot;下面我用 一个 程序员 的角度去分析这种情况。&quot;&gt;&lt;/a&gt;下面我用 一个 程序员 的角度去分析这种情况。&lt;/h3&gt;&lt;p&gt;首先呢，我记得我们之前开发 音乐类 app 的时候，上线小米应用商店，不给通过，说必须加小米锁屏。然后我们就加上了，默认情况下，当用户锁屏后再启动会有自己的锁屏界面，但是有时候小米为了一些性能方面的考虑不让显示，需要直接显示他们的小米锁屏音乐界面。因此基本上市场上的音乐类软件都有小米锁屏界面的 sdk 哦。因为每个软件都有锁屏的 sdk, 所以当听音乐的时候，就会触发这个。你锁屏后再次解锁，就能看到这个了，这是大前提。&lt;/p&gt;
&lt;h3 id=&quot;下面开始重点来了。&quot;&gt;&lt;a href=&quot;#下面开始重点来了。&quot; class=&quot;headerlink&quot; title=&quot;下面开始重点来了。&quot;&gt;&lt;/a&gt;下面开始重点来了。&lt;/h3&gt;&lt;p&gt;现在没有运行音乐软件，但是还是出现了这个，这是怎么回事呢？ 去最近的任务管理也看到不？这个锁屏 SDK 的界面为什么出来了？&lt;br&gt;我在搜索相关资料的时候，一个人的回答提醒了我：『启动最近任务，把音乐类的APP给关掉。』&lt;/p&gt;
&lt;p&gt;我的任务管理中没有啊，突然意识到可能是之前在任务管理中把某些音乐类软件的进程锁定。才造成这种情况，那么我就是试试把手机上所以的音乐类软件打开，其实也就那么几个，网易音乐，酷我，企鹅 FM。然后惊奇的发现，果然如我所料，企鹅 FM 在任务管理中 的小图标上有一个锁。这次我把这个小锁上滑去掉后，再次清理内存就发现，内存一下子就剩 1.3GB 了。 锁屏，解锁，终于出现了小米锁屏画报，这是太好了，这个问题就这样解决了。关键问题还是在这里：音乐类 app 被锁定后，清理内存的时候，会把这个任务干掉，但是由于被锁定了，其实还在内存中。只是在图标上看不到而已，如果手机被 root了，可以用其他的软件清理内存，就可以了。这里还需要注意一点，虽然手机被重启了，但是由于 app 是锁定的状态，所以还是会被启动，app 一启动，就能看得见那个 小米锁屏界面。但是你在任务管理中却看不见，这也是 小米系统的一个 bug 吧。目前这样解决即可。&lt;/p&gt;
&lt;p&gt;如果还有疑问，或者不懂的地方，加 weixin: gdky005, 备注锁屏即可。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;相关图片我就不贴了，参考下面遇到的这些问题：&quot;&gt;&lt;a href=&quot;#相关图片我就不贴了，参考下面遇到的这些问题：&quot; class=&quot;headerlink&quot; title=&quot;相关图片我就不贴了，参考下面遇到的这些问题：&quot;&gt;&lt;/a&gt;相关图片我就不贴了，参考下面遇到的这些问
    
    </summary>
    
    
      <category term="原理" scheme="http://gdky005.com/tags/%E5%8E%9F%E7%90%86/"/>
    
  </entry>
  
  <entry>
    <title>升级android 7.1一些经历</title>
    <link href="http://gdky005.com/2017/03/02/%E5%8D%87%E7%BA%A7android-7-1%E4%B8%80%E4%BA%9B%E7%BB%8F%E5%8E%86/"/>
    <id>http://gdky005.com/2017/03/02/升级android-7-1一些经历/</id>
    <published>2017-03-02T02:56:48.000Z</published>
    <updated>2017-03-02T03:01:02.000Z</updated>
    
    <content type="html">&lt;p&gt;我一直用的测试机是华为 nexus P6, 7.0出来的时候，刷了一个 7.0 玩，感觉还不错，有些你在 7.0之下的版本绝不会出现的问题，出现了好多。&lt;/p&gt;
&lt;p&gt;当7.1 出现的时候，本来不想升级，但是 android 组的 leader 让我把这个 P6 升级为 7.1。为了让测试的性能组测试 vovi 新机器适配。想着刷就刷呗，应该没啥问题。&lt;/p&gt;
&lt;p&gt;可悲的事情就来了，因为我的这个 P6升级到 7.0后就 root 了，刷了 twrp 启动方式。结果直接挂代理后，升级 7.1 后就悲剧了，机子死活开不了机。&lt;/p&gt;
&lt;p&gt;通过 &lt;a href=&quot;http://www.pixcn.cn/thread-23317-1-1.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.pixcn.cn/thread-23317-1-1.html&lt;/a&gt; ，找到了一些解决方案。因为是我的手机 刷了 rec 启动，所以直接用系统自带的更新包就不行。在官网 &lt;a href=&quot;https://developers.google.com/android/images&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://developers.google.com/android/images&lt;/a&gt; 下载了 Factory Images 镜像，只能用线刷。&lt;/p&gt;
&lt;p&gt;把 这个镜像通过 rec 连接电脑，用命令行放入 手机SD 卡中，直接刷总是失败，必须用线刷啊，线刷啊，线刷啊。&lt;/p&gt;
&lt;p&gt;在折腾的很无奈的时候，灵光一闪，进入 rec 之前，尝试用 adb 连接手机，可是就是 连接不上。 最后直接尝试 fastXXX ,没想到 adb shell 不行，但是 电脑上解压 zip 后， 里面的 fast 命令可直接使用。很顺利的就完成了刷机，进入了 7.1 系统。&lt;/p&gt;
&lt;p&gt;在7.0 的时候就一直很郁闷，wifi 连接成功后，在顶部的 wifi 状态标识上面总是有一个 小感叹号。一直没解决，没想到 7.1 直接变成了 小 『x』, 在群里讨论后，一个哥们说可以去掉，我尝试百度了下，用一下命令真就去掉了。 追查原因，说是 google 会去检测 wifi 是否安全，来显示那个 感叹号和小『x』。&lt;/p&gt;
&lt;p&gt;adb输入命令：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;adb shell settings put global captive_portal_detection_enabled 0
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;完成后开启飞行模式即可&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;我一直用的测试机是华为 nexus P6, 7.0出来的时候，刷了一个 7.0 玩，感觉还不错，有些你在 7.0之下的版本绝不会出现的问题，出现了好多。&lt;/p&gt;
&lt;p&gt;当7.1 出现的时候，本来不想升级，但是 android 组的 leader 让我把这个 P6 升级为 7
    
    </summary>
    
      <category term="android" scheme="http://gdky005.com/categories/android/"/>
    
    
      <category term="android" scheme="http://gdky005.com/tags/android/"/>
    
  </entry>
  
  <entry>
    <title>卓客Team团队组建成功</title>
    <link href="http://gdky005.com/2016/11/01/%E5%8D%93%E5%AE%A2Team%E5%9B%A2%E9%98%9F%E7%BB%84%E5%BB%BA%E6%88%90%E5%8A%9F/"/>
    <id>http://gdky005.com/2016/11/01/卓客Team团队组建成功/</id>
    <published>2016-11-01T11:36:52.000Z</published>
    <updated>2016-11-01T11:43:49.000Z</updated>
    
    <content type="html">&lt;h3 id=&quot;卓客Team团队组建成功&quot;&gt;&lt;a href=&quot;#卓客Team团队组建成功&quot; class=&quot;headerlink&quot; title=&quot;卓客Team团队组建成功&quot;&gt;&lt;/a&gt;卓客Team团队组建成功&lt;/h3&gt;&lt;p&gt;卓客Team团队 目前已经组建成功，接下来将完成一些很有意义的事情，请持续关注。&lt;/p&gt;
&lt;h3 id=&quot;卓客Team-群规&quot;&gt;&lt;a href=&quot;#卓客Team-群规&quot; class=&quot;headerlink&quot; title=&quot;卓客Team 群规&quot;&gt;&lt;/a&gt;卓客Team 群规&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;群成员固定为20人，如有突出贡献者，可以破格入群。&lt;/li&gt;
&lt;li&gt;这是一个活跃度很高的Team，每个人都应该展现自己的能力，提升在团队中的影响力。&lt;/li&gt;
&lt;li&gt;请大家都参与课题的设计和讨论，提升个人基本知识技能，并增加团队活跃度。&lt;/li&gt;
&lt;li&gt;希望大家能把好想法和想要研究的东西发到群里面，会被列入到要处理的事项里面。&lt;/li&gt;
&lt;li&gt;做一些很有价值的事情，研究比较感兴趣的技术，撰写一些有技术内涵的文章。&lt;br&gt;在团队中的人，都应该为团队做出适当的贡献，有能力的展示才华，能力弱的可以在其他方面给团队做出贡献。&lt;/li&gt;
&lt;li&gt;对申请加入到群组的人，务必完成一篇课题文章，带组员审核通过后，方可进入。&lt;br&gt;如有新人进入，可能会踢出某些不活跃的成员，请见谅。&lt;/li&gt;
&lt;li&gt;对于活跃度不高的成员，采取适者生存的法则。&lt;/li&gt;
&lt;li&gt;对于存在争议的问题，采取大于等于三分之二以上的票数为通过条件。&lt;/li&gt;
&lt;li&gt;对团队中成员发出的文章或者团队的规定等有疑问或者感觉不合适的地方，可以直接提出修改，并在评论中提出个人观点。&lt;/li&gt;
&lt;li&gt;对于不合理的地方，可以在相关平台上发表自己的意见。&lt;/li&gt;
&lt;/ol&gt;
</content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;卓客Team团队组建成功&quot;&gt;&lt;a href=&quot;#卓客Team团队组建成功&quot; class=&quot;headerlink&quot; title=&quot;卓客Team团队组建成功&quot;&gt;&lt;/a&gt;卓客Team团队组建成功&lt;/h3&gt;&lt;p&gt;卓客Team团队 目前已经组建成功，接下来将完成一些很有意义
    
    </summary>
    
      <category term="ZhuoKeTeam" scheme="http://gdky005.com/categories/ZhuoKeTeam/"/>
    
    
      <category term="卓客Team" scheme="http://gdky005.com/tags/%E5%8D%93%E5%AE%A2Team/"/>
    
  </entry>
  
  <entry>
    <title>标准的Android git和HG的忽略文件是什么样的呢？</title>
    <link href="http://gdky005.com/2016/08/25/%E6%A0%87%E5%87%86%E7%9A%84Android-git%E5%92%8CHG%E7%9A%84%E5%BF%BD%E7%95%A5%E6%96%87%E4%BB%B6%E6%98%AF%E4%BB%80%E4%B9%88%E6%A0%B7%E7%9A%84%E5%91%A2%EF%BC%9F/"/>
    <id>http://gdky005.com/2016/08/25/标准的Android-git和HG的忽略文件是什么样的呢？/</id>
    <published>2016-08-25T03:00:40.000Z</published>
    <updated>2016-08-25T03:46:27.000Z</updated>
    
    <content type="html">&lt;p&gt;&lt;img src=&quot;http://7xlcno.com1.z0.glb.clouddn.com/gitgit_hg_small.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;什么是忽略文件？&quot;&gt;&lt;a href=&quot;#什么是忽略文件？&quot; class=&quot;headerlink&quot; title=&quot;什么是忽略文件？&quot;&gt;&lt;/a&gt;什么是忽略文件？&lt;/h3&gt;&lt;p&gt;当我们在使用 git 和 HG 管理项目文件的时候，会生成很多的文件，但是这些临时文件并不需要我们提交到我们的服务器去，因此就会使用到忽略文件。&lt;/p&gt;
&lt;h3 id=&quot;忽略文件的作用？&quot;&gt;&lt;a href=&quot;#忽略文件的作用？&quot; class=&quot;headerlink&quot; title=&quot;忽略文件的作用？&quot;&gt;&lt;/a&gt;忽略文件的作用？&lt;/h3&gt;&lt;p&gt;当我们用的不好的时候，就会在提交的时候，有很多凌乱的信息，导致我们提交错误或者冲突。最极端的情况就是把一些需要频繁改动的文件提交到服务器，会造成经常冲突，因此我们需要一份标准的忽略文件。&lt;/p&gt;
&lt;h3 id=&quot;通用的忽略文件&quot;&gt;&lt;a href=&quot;#通用的忽略文件&quot; class=&quot;headerlink&quot; title=&quot;通用的忽略文件&quot;&gt;&lt;/a&gt;通用的忽略文件&lt;/h3&gt;&lt;p&gt;以下提供两种忽略文件的模板，满足大部分需求。&lt;/p&gt;
&lt;h5 id=&quot;1-git-的忽略文件模板：&quot;&gt;&lt;a href=&quot;#1-git-的忽略文件模板：&quot; class=&quot;headerlink&quot; title=&quot;1. git 的忽略文件模板：&quot;&gt;&lt;/a&gt;1. git 的忽略文件模板：&lt;/h5&gt;&lt;p&gt;&lt;img src=&quot;http://7xlcno.com1.z0.glb.clouddn.com/gitgit.jpg&quot; alt=&quot;&quot;&gt;&lt;br&gt;请在项目的根目录下创建或者修改这个文件： .gitignore 即可。git相关管理工具会 自动识别该文件，帮我们自动忽略掉不需要的文件。如果我们有其他文件也不用提交的画，可以参考下面的样式添加进去即可：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;*~
.DS_Store

# Android Studio
*.iml
.idea
.gradle

build


# Created by .ignore support plugin (hsz.mobi)
syntax: glob

### Android template
# Built application files
*.apk
*.ap_

# Files for the ART/Dalvik VM
*.dex

# Java class files
*.class

# Generated files
bin/
gen/
out/

# Gradle files
.gradle/
build/

# Local configuration file (sdk path, etc)
local.properties

# Proguard folder generated by Eclipse
proguard/

# Log Files
*.log

# Android Studio Navigation editor temp files
.navigation/

# Android Studio captures folder
captures/

# Intellij
*.iml
.idea/workspace.xml

# Keystore files
*.jks
### Eclipse template

.metadata
tmp/
*.tmp
*.bak
*.swp
*~.nib
.settings/
.loadpath
.recommenders

# Eclipse Core
.project

# External tool builders
.externalToolBuilders/

# Locally stored &amp;quot;Eclipse launch configurations&amp;quot;
*.launch

# PyDev specific (Python IDE for Eclipse)
*.pydevproject

# CDT-specific (C/C++ Development Tooling)
.cproject

# JDT-specific (Eclipse Java Development Tools)
.classpath

# Java annotation processor (APT)
.factorypath

# PDT-specific (PHP Development Tools)
.buildpath

# sbteclipse plugin
.target

# Tern plugin
.tern-project

# TeXlipse plugin
.texlipse

# STS (Spring Tool Suite)
.springBeans

# Code Recommenders
.recommenders/

# Mobile Tools for Java (J2ME)
.mtj.tmp/

# Package Files #
*.jar
*.war
*.ear

# virtual machine crash logs, see http://www.java.com/en/download/help/error_hotspot.xml
hs_err_pid*
### Example user template template
### Example user template

# IntelliJ project files
.idea
out
gen
&lt;/code&gt;&lt;/pre&gt;&lt;h5 id=&quot;2-HG-Mercurial-的忽略文件模板：&quot;&gt;&lt;a href=&quot;#2-HG-Mercurial-的忽略文件模板：&quot; class=&quot;headerlink&quot; title=&quot;2. HG/Mercurial 的忽略文件模板：&quot;&gt;&lt;/a&gt;2. HG/Mercurial 的忽略文件模板：&lt;/h5&gt;&lt;p&gt;&lt;img src=&quot;http://7xlcno.com1.z0.glb.clouddn.com/gitmercurial.png&quot; alt=&quot;&quot;&gt;&lt;br&gt;HG (Mercurial) 的标准忽略文件。这是早期比较好的项目管理工具，但是随着git 的用户群体庞大，git越来越灵活，简单易用，因此 HG也就慢慢退出了我们的视线。最有名的 github 里面也大量使用到git。但是作为一种管理工具，在不同的环境场景下，也可能需要使用HG，尤其是公司的备份管理等，都十分的安全。使用方式很简单，在主项目的根目录下 创建或者修改： .hgignore 文件即可。 这个文件也可以直接放到mode 里面去。 这里提供忽略文件如下：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# Created by .ignore support plugin (hsz.mobi)
syntax: glob

### Android template
# Built application files
*.apk
*.ap_

# Files for the ART/Dalvik VM
*.dex

# Java class files
*.class

# Generated files
bin/
gen/
out/

# Gradle files
.gradle/
build/

# Local configuration file (sdk path, etc)
local.properties

# Proguard folder generated by Eclipse
proguard/

# Log Files
*.log

# Android Studio Navigation editor temp files
.navigation/

# Android Studio captures folder
captures/


# Keystore files
*.jks
### Eclipse template

.metadata
tmp/
*.tmp
*.bak
*.swp
*~.nib
.settings/
.loadpath
.recommenders

# Eclipse Core
.project

# External tool builders
.externalToolBuilders/

# Locally stored &amp;quot;Eclipse launch configurations&amp;quot;
*.launch

# PyDev specific (Python IDE for Eclipse)
*.pydevproject

# CDT-specific (C/C++ Development Tooling)
.cproject

# JDT-specific (Eclipse Java Development Tools)
.classpath

# Java annotation processor (APT)
.factorypath

# PDT-specific (PHP Development Tools)
.buildpath

# sbteclipse plugin
.target

# Tern plugin
.tern-project

# TeXlipse plugin
.texlipse

# STS (Spring Tool Suite)
.springBeans

# Code Recommenders
.recommenders/

# Mobile Tools for Java (J2ME)
.mtj.tmp/

# Package Files #
*.jar
*.war
*.ear

# virtual machine crash logs, see http://www.java.com/en/download/help/error_hotspot.xml
hs_err_pid*
### Example user template template
### Example user template

# IntelliJ project files
.idea
*.iml
out
gen
&lt;/code&gt;&lt;/pre&gt;</content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://7xlcno.com1.z0.glb.clouddn.com/gitgit_hg_small.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;什么是忽略文件？&quot;&gt;&lt;a href=&quot;#什么是忽略文件？&quot; class=&quot;headerlink&quot;
    
    </summary>
    
    
      <category term="git" scheme="http://gdky005.com/tags/git/"/>
    
  </entry>
  
  <entry>
    <title>OkHttp和Okio</title>
    <link href="http://gdky005.com/2016/08/08/OkHttp%E5%92%8COkio/"/>
    <id>http://gdky005.com/2016/08/08/OkHttp和Okio/</id>
    <published>2016-08-08T10:48:10.000Z</published>
    <updated>2016-08-08T10:49:49.000Z</updated>
    
    <content type="html">&lt;h3 id=&quot;本文摘要&quot;&gt;&lt;a href=&quot;#本文摘要&quot; class=&quot;headerlink&quot; title=&quot;本文摘要&quot;&gt;&lt;/a&gt;本文摘要&lt;/h3&gt;&lt;p&gt;文本将介绍OkHttp和Okio基本使用&lt;/p&gt;
&lt;h3 id=&quot;OkHttp&quot;&gt;&lt;a href=&quot;#OkHttp&quot; class=&quot;headerlink&quot; title=&quot;OkHttp&quot;&gt;&lt;/a&gt;OkHttp&lt;/h3&gt;&lt;p&gt;HTTP 是现在APP访问网络最流行的方式。通过它我们可以交换数据和媒体信息。而高效的使用HTTP可以让你的加载数据更快并且节省带宽。&lt;/p&gt;
&lt;p&gt;OkHttp就是一种HTTP客户端连接，它有如下特性：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;HTTP/2多路复用Socket到同一个主机，共享链接。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;采用连接池技术，可以有效的减少Http链接数量。&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;无缝集成GZIP压缩技术。&lt;/li&gt;
&lt;li&gt;支持Response Cache，避免重复请求。&lt;/li&gt;
&lt;li&gt;域名多IP支持。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;OkHttp可以处理常见的网络问题：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;如果OkHttp连接一个域名失败后，它会尝试连接下一个该域名的IP地址。（&lt;strong&gt;需要DNS支持&lt;/strong&gt;）&lt;/li&gt;
&lt;li&gt;OkHttp在初始化链接的时候，会采用最新的TLS特性（SNI，ALPN），如果失败会采用TLS1.0进行链接。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;使用OkHttp是非常简单的。它的request/response API采用非常流畅的Builder模式构建。 并且它支持同步阻塞调用以及异步调用。&lt;/p&gt;
&lt;p&gt;OkHttp支持Android2.3+。对于Java最低支持1.7+&lt;/p&gt;
&lt;p&gt;OkHttp会&lt;strong&gt;自动管理HTTP连接的生命周期&lt;/strong&gt;：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;操作Response.body().string()等类型的API，OkHttp会自动将该HTTP连接加入到ConnectionPool中或者直接释放连接&lt;/li&gt;
&lt;li&gt;如果采用stream方式操作流，则需要自己手动关闭，否则会发生HTTP连接泄漏（OkHttp通过WeakReference机制，尽最大努力管理这些泄漏的HTTP连接）&lt;/li&gt;
&lt;li&gt;OkHttp不读取Resonse#Head#Keep-Alive属性来决定该HTTP连接是否能复用，而是直接加入到ConnectionPool进行复用&lt;/li&gt;
&lt;li&gt;当从ConnectionPool中获取HTTP连接的时候，OkHttp发现该HTTP连接已经失效，则关闭该连接，并且重新选择一个HTTP连接进行复用&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;GET-请求&quot;&gt;&lt;a href=&quot;#GET-请求&quot; class=&quot;headerlink&quot; title=&quot;GET 请求&quot;&gt;&lt;/a&gt;GET 请求&lt;/h3&gt;&lt;pre&gt;&lt;code&gt;package com.company;

import okhttp3.*;

public class Main {

    public static void main(String[] args) throws Exception {
        OkHttpClient client = new OkHttpClient();
        //请求
        Request request = new Request.Builder()
                .url(&amp;quot;http://www.baidu.com/&amp;quot;)
                .get()
                .build();
        //发起请求
        Response response = client.newCall(request).execute();
        //结果
        System.out.println(response.body().string());
    }
}
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&quot;POST-请求&quot;&gt;&lt;a href=&quot;#POST-请求&quot; class=&quot;headerlink&quot; title=&quot;POST 请求&quot;&gt;&lt;/a&gt;POST 请求&lt;/h3&gt;&lt;pre&gt;&lt;code&gt;package com.company;

import okhttp3.*;

public class Main {

    public static void main(String[] args) throws Exception {
        OkHttpClient client = new OkHttpClient();
        //参数
        RequestBody requestBody = new FormBody.Builder()
                .add(&amp;quot;DGM&amp;quot;, &amp;quot;DGM&amp;quot;)
                .build();
        //请求
        Request request = new Request.Builder()
                .url(&amp;quot;http://www.baidu.com/&amp;quot;)
                .post(requestBody)
                .build();
        //发起请求
        Response response = client.newCall(request).execute();
        //结果
        System.out.println(response.body().string());
    }
}
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&quot;引入项目中：&quot;&gt;&lt;a href=&quot;#引入项目中：&quot; class=&quot;headerlink&quot; title=&quot;引入项目中：&quot;&gt;&lt;/a&gt;引入项目中：&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;Maven&lt;/strong&gt;&lt;br&gt;    &lt;dependency&gt;&lt;br&gt;      &lt;groupid&gt;com.squareup.okhttp3&lt;/groupid&gt;&lt;br&gt;      &lt;artifactid&gt;okhttp&lt;/artifactid&gt;&lt;br&gt;      &lt;version&gt;(insert latest version)&lt;/version&gt;&lt;br&gt;    &lt;/dependency&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Gradle&lt;/strong&gt;&lt;br&gt;    compile ‘com.squareup.okhttp3:okhttp:(insert latest version)’&lt;/p&gt;
&lt;p&gt;PS： (insert latest version) 请替换成 官网最新的&lt;/p&gt;
&lt;h3 id=&quot;Okio&quot;&gt;&lt;a href=&quot;#Okio&quot; class=&quot;headerlink&quot; title=&quot;Okio&quot;&gt;&lt;/a&gt;Okio&lt;/h3&gt;&lt;p&gt;Okio是一款新的类库，它可以使得 java.io.* 和 java.nio.* 更加方便的被使用以及处理数据。 现在我的一些文件操作或者流 必用Okio。&lt;/p&gt;
&lt;h3 id=&quot;Copy文件的例子&quot;&gt;&lt;a href=&quot;#Copy文件的例子&quot; class=&quot;headerlink&quot; title=&quot;Copy文件的例子&quot;&gt;&lt;/a&gt;Copy文件的例子&lt;/h3&gt;&lt;pre&gt;&lt;code&gt;package com.company;

import okio.BufferedSink;
import okio.BufferedSource;
import okio.Okio;

import java.io.File;

public class Main {

    public static void main(String[] args) throws Exception {
        //创建buffer
        BufferedSource source = Okio.buffer(Okio.source(new File(&amp;quot;data/file1&amp;quot;)));
        BufferedSink sink = Okio.buffer(Okio.sink(new File(&amp;quot;data/file&amp;quot; + System.currentTimeMillis())));
        //copy数据
        sink.writeAll(source);
        //关闭资源
        sink.close();
        source.close();
    }
}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;可以发现，通过Okio可以非常方便的处理io数据。&lt;/p&gt;
&lt;h3 id=&quot;ByteString-和-Buffer&quot;&gt;&lt;a href=&quot;#ByteString-和-Buffer&quot; class=&quot;headerlink&quot; title=&quot;ByteString 和 Buffer&quot;&gt;&lt;/a&gt;ByteString 和 Buffer&lt;/h3&gt;&lt;p&gt;在Okio中通过ByteString和Buffer这两种类型，提供了高性能和简单的API：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;ByteString是一种不可改变的byte序列。提供了一种基于String，采用char访问的二进制模式。通过ByteString可以像一般value一样处理二进制数据。并且提供了对encode/decode中的HEX，Base64以及UTF-8支持。&lt;/li&gt;
&lt;li&gt;Buffer是一种可变的byte序列。就像ArrayList一样，你不需要知道Buffer的大小。在处理buffer的read/write的时候，就像queue一样。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;通过这两个类，可以极大的增强io访问的数据处理。&lt;/p&gt;
&lt;h3 id=&quot;Source-和-Sink&quot;&gt;&lt;a href=&quot;#Source-和-Sink&quot; class=&quot;headerlink&quot; title=&quot;Source 和 Sink&quot;&gt;&lt;/a&gt;Source 和 Sink&lt;/h3&gt;&lt;p&gt;这两个类是在 InputStream 以及 OutputStream 上进行抽象而成的。 它还具有如下特性：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Timeout： 可以提供超时处理机制。&lt;/li&gt;
&lt;li&gt;Easy to implement： Source 仅仅声明了read，close，timeout方法。实现起来非常的方便。&lt;/li&gt;
&lt;li&gt;Easy to use：通过实现/使用BufferedSource和BufferedSink接口，可以更加方便的操作二进制数据。&lt;/li&gt;
&lt;li&gt;No artificial distinction between byte streams and char streams：可以非常方便的将二进制数据处理为UTF-8字符串，int等类型数据。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Source 和 Sink 实现了InputStream 以及 OutputStream。你可以将Source看成InputStream，将Sink看成OutputStream。&lt;strong&gt;而通过BufferedSource和BufferedSink可以非常方便的进行数据处理。&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id=&quot;总结&quot;&gt;&lt;a href=&quot;#总结&quot; class=&quot;headerlink&quot; title=&quot;总结&quot;&gt;&lt;/a&gt;总结&lt;/h3&gt;&lt;p&gt;通过开源的square工具，我们可以非常方便的处理io以及http数据。在最新的Android6.0+中，已经剔除了Apache URLConnection类，而采用OkHttp。所以可见OkHttp的代码质量还有有保证的。&lt;/p&gt;
&lt;h5 id=&quot;链接：&quot;&gt;&lt;a href=&quot;#链接：&quot; class=&quot;headerlink&quot; title=&quot;链接：&quot;&gt;&lt;/a&gt;链接：&lt;/h5&gt;&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/square/okio&quot; title=&quot;Okio&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Okio&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://square.github.io/okhttp/&quot; title=&quot;OkHttp&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;OkHttp&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://my.oschina.net/darkgem/blog/643980&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;来源&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
</content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;本文摘要&quot;&gt;&lt;a href=&quot;#本文摘要&quot; class=&quot;headerlink&quot; title=&quot;本文摘要&quot;&gt;&lt;/a&gt;本文摘要&lt;/h3&gt;&lt;p&gt;文本将介绍OkHttp和Okio基本使用&lt;/p&gt;
&lt;h3 id=&quot;OkHttp&quot;&gt;&lt;a href=&quot;#OkHttp&quot; cla
    
    </summary>
    
    
      <category term="OkHttp,Okio" scheme="http://gdky005.com/tags/OkHttp-Okio/"/>
    
  </entry>
  
</feed>
